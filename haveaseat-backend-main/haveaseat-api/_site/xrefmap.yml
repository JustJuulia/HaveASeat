### YamlMime:XRefMap
sorted: true
references:
- uid: haveaseat.Controllers
  name: haveaseat.Controllers
  href: api/haveaseat.Controllers.html
  commentId: N:haveaseat.Controllers
  fullName: haveaseat.Controllers
  nameWithType: haveaseat.Controllers
- uid: haveaseat.Controllers.ForbiddenDateController
  name: ForbiddenDateController
  href: api/haveaseat.Controllers.ForbiddenDateController.html
  commentId: T:haveaseat.Controllers.ForbiddenDateController
  fullName: haveaseat.Controllers.ForbiddenDateController
  nameWithType: ForbiddenDateController
- uid: haveaseat.Controllers.ForbiddenDateController.#ctor(haveaseat.Repositories.Interfaces.IForbiddenDateRepository)
  name: ForbiddenDateController(IForbiddenDateRepository)
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController__ctor_haveaseat_Repositories_Interfaces_IForbiddenDateRepository_
  commentId: M:haveaseat.Controllers.ForbiddenDateController.#ctor(haveaseat.Repositories.Interfaces.IForbiddenDateRepository)
  name.vb: New(IForbiddenDateRepository)
  fullName: haveaseat.Controllers.ForbiddenDateController.ForbiddenDateController(haveaseat.Repositories.Interfaces.IForbiddenDateRepository)
  fullName.vb: haveaseat.Controllers.ForbiddenDateController.New(haveaseat.Repositories.Interfaces.IForbiddenDateRepository)
  nameWithType: ForbiddenDateController.ForbiddenDateController(IForbiddenDateRepository)
  nameWithType.vb: ForbiddenDateController.New(IForbiddenDateRepository)
- uid: haveaseat.Controllers.ForbiddenDateController.#ctor*
  name: ForbiddenDateController
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController__ctor_
  commentId: Overload:haveaseat.Controllers.ForbiddenDateController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.Controllers.ForbiddenDateController.ForbiddenDateController
  fullName.vb: haveaseat.Controllers.ForbiddenDateController.New
  nameWithType: ForbiddenDateController.ForbiddenDateController
  nameWithType.vb: ForbiddenDateController.New
- uid: haveaseat.Controllers.ForbiddenDateController.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  name: AddForbiddenDate(NewForbiddenDateDTO)
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_AddForbiddenDate_haveaseat_DTOs_NewForbiddenDateDTO_
  commentId: M:haveaseat.Controllers.ForbiddenDateController.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  fullName: haveaseat.Controllers.ForbiddenDateController.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  nameWithType: ForbiddenDateController.AddForbiddenDate(NewForbiddenDateDTO)
- uid: haveaseat.Controllers.ForbiddenDateController.AddForbiddenDate*
  name: AddForbiddenDate
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_AddForbiddenDate_
  commentId: Overload:haveaseat.Controllers.ForbiddenDateController.AddForbiddenDate
  isSpec: "True"
  fullName: haveaseat.Controllers.ForbiddenDateController.AddForbiddenDate
  nameWithType: ForbiddenDateController.AddForbiddenDate
- uid: haveaseat.Controllers.ForbiddenDateController.DeleteForbiddenDateByDate(System.DateOnly)
  name: DeleteForbiddenDateByDate(DateOnly)
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_DeleteForbiddenDateByDate_System_DateOnly_
  commentId: M:haveaseat.Controllers.ForbiddenDateController.DeleteForbiddenDateByDate(System.DateOnly)
  fullName: haveaseat.Controllers.ForbiddenDateController.DeleteForbiddenDateByDate(System.DateOnly)
  nameWithType: ForbiddenDateController.DeleteForbiddenDateByDate(DateOnly)
- uid: haveaseat.Controllers.ForbiddenDateController.DeleteForbiddenDateByDate*
  name: DeleteForbiddenDateByDate
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_DeleteForbiddenDateByDate_
  commentId: Overload:haveaseat.Controllers.ForbiddenDateController.DeleteForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Controllers.ForbiddenDateController.DeleteForbiddenDateByDate
  nameWithType: ForbiddenDateController.DeleteForbiddenDateByDate
- uid: haveaseat.Controllers.ForbiddenDateController.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  name: EditForbiddenDateByDate(NewForbiddenDateDTO)
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_EditForbiddenDateByDate_haveaseat_DTOs_NewForbiddenDateDTO_
  commentId: M:haveaseat.Controllers.ForbiddenDateController.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  fullName: haveaseat.Controllers.ForbiddenDateController.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  nameWithType: ForbiddenDateController.EditForbiddenDateByDate(NewForbiddenDateDTO)
- uid: haveaseat.Controllers.ForbiddenDateController.EditForbiddenDateByDate*
  name: EditForbiddenDateByDate
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_EditForbiddenDateByDate_
  commentId: Overload:haveaseat.Controllers.ForbiddenDateController.EditForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Controllers.ForbiddenDateController.EditForbiddenDateByDate
  nameWithType: ForbiddenDateController.EditForbiddenDateByDate
- uid: haveaseat.Controllers.ForbiddenDateController.GetAllForbiddenDates
  name: GetAllForbiddenDates()
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_GetAllForbiddenDates
  commentId: M:haveaseat.Controllers.ForbiddenDateController.GetAllForbiddenDates
  fullName: haveaseat.Controllers.ForbiddenDateController.GetAllForbiddenDates()
  nameWithType: ForbiddenDateController.GetAllForbiddenDates()
- uid: haveaseat.Controllers.ForbiddenDateController.GetAllForbiddenDates*
  name: GetAllForbiddenDates
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_GetAllForbiddenDates_
  commentId: Overload:haveaseat.Controllers.ForbiddenDateController.GetAllForbiddenDates
  isSpec: "True"
  fullName: haveaseat.Controllers.ForbiddenDateController.GetAllForbiddenDates
  nameWithType: ForbiddenDateController.GetAllForbiddenDates
- uid: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateByDate(System.DateOnly)
  name: GetForbiddenDateByDate(DateOnly)
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_GetForbiddenDateByDate_System_DateOnly_
  commentId: M:haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateByDate(System.DateOnly)
  fullName: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateByDate(System.DateOnly)
  nameWithType: ForbiddenDateController.GetForbiddenDateByDate(DateOnly)
- uid: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateByDate*
  name: GetForbiddenDateByDate
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_GetForbiddenDateByDate_
  commentId: Overload:haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateByDate
  nameWithType: ForbiddenDateController.GetForbiddenDateByDate
- uid: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateById(System.Int64)
  name: GetForbiddenDateById(long)
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_GetForbiddenDateById_System_Int64_
  commentId: M:haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateById(System.Int64)
  name.vb: GetForbiddenDateById(Long)
  fullName: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateById(long)
  fullName.vb: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateById(Long)
  nameWithType: ForbiddenDateController.GetForbiddenDateById(long)
  nameWithType.vb: ForbiddenDateController.GetForbiddenDateById(Long)
- uid: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateById*
  name: GetForbiddenDateById
  href: api/haveaseat.Controllers.ForbiddenDateController.html#haveaseat_Controllers_ForbiddenDateController_GetForbiddenDateById_
  commentId: Overload:haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateById
  isSpec: "True"
  fullName: haveaseat.Controllers.ForbiddenDateController.GetForbiddenDateById
  nameWithType: ForbiddenDateController.GetForbiddenDateById
- uid: haveaseat.DTOs
  name: haveaseat.DTOs
  href: api/haveaseat.DTOs.html
  commentId: N:haveaseat.DTOs
  fullName: haveaseat.DTOs
  nameWithType: haveaseat.DTOs
- uid: haveaseat.DTOs.CellDTO
  name: CellDTO
  href: api/haveaseat.DTOs.CellDTO.html
  commentId: T:haveaseat.DTOs.CellDTO
  fullName: haveaseat.DTOs.CellDTO
  nameWithType: CellDTO
- uid: haveaseat.DTOs.CellDTO.#ctor(haveaseat.Entities.Cell)
  name: CellDTO(Cell)
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO__ctor_haveaseat_Entities_Cell_
  commentId: M:haveaseat.DTOs.CellDTO.#ctor(haveaseat.Entities.Cell)
  name.vb: New(Cell)
  fullName: haveaseat.DTOs.CellDTO.CellDTO(haveaseat.Entities.Cell)
  fullName.vb: haveaseat.DTOs.CellDTO.New(haveaseat.Entities.Cell)
  nameWithType: CellDTO.CellDTO(Cell)
  nameWithType.vb: CellDTO.New(Cell)
- uid: haveaseat.DTOs.CellDTO.#ctor*
  name: CellDTO
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO__ctor_
  commentId: Overload:haveaseat.DTOs.CellDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.CellDTO.CellDTO
  fullName.vb: haveaseat.DTOs.CellDTO.New
  nameWithType: CellDTO.CellDTO
  nameWithType.vb: CellDTO.New
- uid: haveaseat.DTOs.CellDTO.Border
  name: Border
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO_Border
  commentId: P:haveaseat.DTOs.CellDTO.Border
  fullName: haveaseat.DTOs.CellDTO.Border
  nameWithType: CellDTO.Border
- uid: haveaseat.DTOs.CellDTO.Border*
  name: Border
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO_Border_
  commentId: Overload:haveaseat.DTOs.CellDTO.Border
  isSpec: "True"
  fullName: haveaseat.DTOs.CellDTO.Border
  nameWithType: CellDTO.Border
- uid: haveaseat.DTOs.CellDTO.Id
  name: Id
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO_Id
  commentId: P:haveaseat.DTOs.CellDTO.Id
  fullName: haveaseat.DTOs.CellDTO.Id
  nameWithType: CellDTO.Id
- uid: haveaseat.DTOs.CellDTO.Id*
  name: Id
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO_Id_
  commentId: Overload:haveaseat.DTOs.CellDTO.Id
  isSpec: "True"
  fullName: haveaseat.DTOs.CellDTO.Id
  nameWithType: CellDTO.Id
- uid: haveaseat.DTOs.CellDTO.PositionX
  name: PositionX
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO_PositionX
  commentId: P:haveaseat.DTOs.CellDTO.PositionX
  fullName: haveaseat.DTOs.CellDTO.PositionX
  nameWithType: CellDTO.PositionX
- uid: haveaseat.DTOs.CellDTO.PositionX*
  name: PositionX
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO_PositionX_
  commentId: Overload:haveaseat.DTOs.CellDTO.PositionX
  isSpec: "True"
  fullName: haveaseat.DTOs.CellDTO.PositionX
  nameWithType: CellDTO.PositionX
- uid: haveaseat.DTOs.CellDTO.PositionY
  name: PositionY
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO_PositionY
  commentId: P:haveaseat.DTOs.CellDTO.PositionY
  fullName: haveaseat.DTOs.CellDTO.PositionY
  nameWithType: CellDTO.PositionY
- uid: haveaseat.DTOs.CellDTO.PositionY*
  name: PositionY
  href: api/haveaseat.DTOs.CellDTO.html#haveaseat_DTOs_CellDTO_PositionY_
  commentId: Overload:haveaseat.DTOs.CellDTO.PositionY
  isSpec: "True"
  fullName: haveaseat.DTOs.CellDTO.PositionY
  nameWithType: CellDTO.PositionY
- uid: haveaseat.DTOs.DeskDTO
  name: DeskDTO
  href: api/haveaseat.DTOs.DeskDTO.html
  commentId: T:haveaseat.DTOs.DeskDTO
  fullName: haveaseat.DTOs.DeskDTO
  nameWithType: DeskDTO
- uid: haveaseat.DTOs.DeskDTO.#ctor(haveaseat.Entities.Desk)
  name: DeskDTO(Desk)
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO__ctor_haveaseat_Entities_Desk_
  commentId: M:haveaseat.DTOs.DeskDTO.#ctor(haveaseat.Entities.Desk)
  name.vb: New(Desk)
  fullName: haveaseat.DTOs.DeskDTO.DeskDTO(haveaseat.Entities.Desk)
  fullName.vb: haveaseat.DTOs.DeskDTO.New(haveaseat.Entities.Desk)
  nameWithType: DeskDTO.DeskDTO(Desk)
  nameWithType.vb: DeskDTO.New(Desk)
- uid: haveaseat.DTOs.DeskDTO.#ctor*
  name: DeskDTO
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO__ctor_
  commentId: Overload:haveaseat.DTOs.DeskDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.DeskDTO.DeskDTO
  fullName.vb: haveaseat.DTOs.DeskDTO.New
  nameWithType: DeskDTO.DeskDTO
  nameWithType.vb: DeskDTO.New
- uid: haveaseat.DTOs.DeskDTO.ChairPosition
  name: ChairPosition
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO_ChairPosition
  commentId: P:haveaseat.DTOs.DeskDTO.ChairPosition
  fullName: haveaseat.DTOs.DeskDTO.ChairPosition
  nameWithType: DeskDTO.ChairPosition
- uid: haveaseat.DTOs.DeskDTO.ChairPosition*
  name: ChairPosition
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO_ChairPosition_
  commentId: Overload:haveaseat.DTOs.DeskDTO.ChairPosition
  isSpec: "True"
  fullName: haveaseat.DTOs.DeskDTO.ChairPosition
  nameWithType: DeskDTO.ChairPosition
- uid: haveaseat.DTOs.DeskDTO.Id
  name: Id
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO_Id
  commentId: P:haveaseat.DTOs.DeskDTO.Id
  fullName: haveaseat.DTOs.DeskDTO.Id
  nameWithType: DeskDTO.Id
- uid: haveaseat.DTOs.DeskDTO.Id*
  name: Id
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO_Id_
  commentId: Overload:haveaseat.DTOs.DeskDTO.Id
  isSpec: "True"
  fullName: haveaseat.DTOs.DeskDTO.Id
  nameWithType: DeskDTO.Id
- uid: haveaseat.DTOs.DeskDTO.PositionX
  name: PositionX
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO_PositionX
  commentId: P:haveaseat.DTOs.DeskDTO.PositionX
  fullName: haveaseat.DTOs.DeskDTO.PositionX
  nameWithType: DeskDTO.PositionX
- uid: haveaseat.DTOs.DeskDTO.PositionX*
  name: PositionX
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO_PositionX_
  commentId: Overload:haveaseat.DTOs.DeskDTO.PositionX
  isSpec: "True"
  fullName: haveaseat.DTOs.DeskDTO.PositionX
  nameWithType: DeskDTO.PositionX
- uid: haveaseat.DTOs.DeskDTO.PositionY
  name: PositionY
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO_PositionY
  commentId: P:haveaseat.DTOs.DeskDTO.PositionY
  fullName: haveaseat.DTOs.DeskDTO.PositionY
  nameWithType: DeskDTO.PositionY
- uid: haveaseat.DTOs.DeskDTO.PositionY*
  name: PositionY
  href: api/haveaseat.DTOs.DeskDTO.html#haveaseat_DTOs_DeskDTO_PositionY_
  commentId: Overload:haveaseat.DTOs.DeskDTO.PositionY
  isSpec: "True"
  fullName: haveaseat.DTOs.DeskDTO.PositionY
  nameWithType: DeskDTO.PositionY
- uid: haveaseat.DTOs.ForbiddenDateDTO
  name: ForbiddenDateDTO
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html
  commentId: T:haveaseat.DTOs.ForbiddenDateDTO
  fullName: haveaseat.DTOs.ForbiddenDateDTO
  nameWithType: ForbiddenDateDTO
- uid: haveaseat.DTOs.ForbiddenDateDTO.#ctor(haveaseat.Entities.ForbiddenDate)
  name: ForbiddenDateDTO(ForbiddenDate)
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html#haveaseat_DTOs_ForbiddenDateDTO__ctor_haveaseat_Entities_ForbiddenDate_
  commentId: M:haveaseat.DTOs.ForbiddenDateDTO.#ctor(haveaseat.Entities.ForbiddenDate)
  name.vb: New(ForbiddenDate)
  fullName: haveaseat.DTOs.ForbiddenDateDTO.ForbiddenDateDTO(haveaseat.Entities.ForbiddenDate)
  fullName.vb: haveaseat.DTOs.ForbiddenDateDTO.New(haveaseat.Entities.ForbiddenDate)
  nameWithType: ForbiddenDateDTO.ForbiddenDateDTO(ForbiddenDate)
  nameWithType.vb: ForbiddenDateDTO.New(ForbiddenDate)
- uid: haveaseat.DTOs.ForbiddenDateDTO.#ctor*
  name: ForbiddenDateDTO
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html#haveaseat_DTOs_ForbiddenDateDTO__ctor_
  commentId: Overload:haveaseat.DTOs.ForbiddenDateDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.ForbiddenDateDTO.ForbiddenDateDTO
  fullName.vb: haveaseat.DTOs.ForbiddenDateDTO.New
  nameWithType: ForbiddenDateDTO.ForbiddenDateDTO
  nameWithType.vb: ForbiddenDateDTO.New
- uid: haveaseat.DTOs.ForbiddenDateDTO.Date
  name: Date
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html#haveaseat_DTOs_ForbiddenDateDTO_Date
  commentId: P:haveaseat.DTOs.ForbiddenDateDTO.Date
  fullName: haveaseat.DTOs.ForbiddenDateDTO.Date
  nameWithType: ForbiddenDateDTO.Date
- uid: haveaseat.DTOs.ForbiddenDateDTO.Date*
  name: Date
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html#haveaseat_DTOs_ForbiddenDateDTO_Date_
  commentId: Overload:haveaseat.DTOs.ForbiddenDateDTO.Date
  isSpec: "True"
  fullName: haveaseat.DTOs.ForbiddenDateDTO.Date
  nameWithType: ForbiddenDateDTO.Date
- uid: haveaseat.DTOs.ForbiddenDateDTO.Description
  name: Description
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html#haveaseat_DTOs_ForbiddenDateDTO_Description
  commentId: P:haveaseat.DTOs.ForbiddenDateDTO.Description
  fullName: haveaseat.DTOs.ForbiddenDateDTO.Description
  nameWithType: ForbiddenDateDTO.Description
- uid: haveaseat.DTOs.ForbiddenDateDTO.Description*
  name: Description
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html#haveaseat_DTOs_ForbiddenDateDTO_Description_
  commentId: Overload:haveaseat.DTOs.ForbiddenDateDTO.Description
  isSpec: "True"
  fullName: haveaseat.DTOs.ForbiddenDateDTO.Description
  nameWithType: ForbiddenDateDTO.Description
- uid: haveaseat.DTOs.ForbiddenDateDTO.Id
  name: Id
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html#haveaseat_DTOs_ForbiddenDateDTO_Id
  commentId: P:haveaseat.DTOs.ForbiddenDateDTO.Id
  fullName: haveaseat.DTOs.ForbiddenDateDTO.Id
  nameWithType: ForbiddenDateDTO.Id
- uid: haveaseat.DTOs.ForbiddenDateDTO.Id*
  name: Id
  href: api/haveaseat.DTOs.ForbiddenDateDTO.html#haveaseat_DTOs_ForbiddenDateDTO_Id_
  commentId: Overload:haveaseat.DTOs.ForbiddenDateDTO.Id
  isSpec: "True"
  fullName: haveaseat.DTOs.ForbiddenDateDTO.Id
  nameWithType: ForbiddenDateDTO.Id
- uid: haveaseat.DTOs.LongTimeReservationToCheckDTQ
  name: LongTimeReservationToCheckDTQ
  href: api/haveaseat.DTOs.LongTimeReservationToCheckDTQ.html
  commentId: T:haveaseat.DTOs.LongTimeReservationToCheckDTQ
  fullName: haveaseat.DTOs.LongTimeReservationToCheckDTQ
  nameWithType: LongTimeReservationToCheckDTQ
- uid: haveaseat.DTOs.LongTimeReservationToCheckDTQ.#ctor
  name: LongTimeReservationToCheckDTQ()
  href: api/haveaseat.DTOs.LongTimeReservationToCheckDTQ.html#haveaseat_DTOs_LongTimeReservationToCheckDTQ__ctor
  commentId: M:haveaseat.DTOs.LongTimeReservationToCheckDTQ.#ctor
  name.vb: New()
  fullName: haveaseat.DTOs.LongTimeReservationToCheckDTQ.LongTimeReservationToCheckDTQ()
  fullName.vb: haveaseat.DTOs.LongTimeReservationToCheckDTQ.New()
  nameWithType: LongTimeReservationToCheckDTQ.LongTimeReservationToCheckDTQ()
  nameWithType.vb: LongTimeReservationToCheckDTQ.New()
- uid: haveaseat.DTOs.LongTimeReservationToCheckDTQ.#ctor(haveaseat.Entities.Reservation)
  name: LongTimeReservationToCheckDTQ(Reservation)
  href: api/haveaseat.DTOs.LongTimeReservationToCheckDTQ.html#haveaseat_DTOs_LongTimeReservationToCheckDTQ__ctor_haveaseat_Entities_Reservation_
  commentId: M:haveaseat.DTOs.LongTimeReservationToCheckDTQ.#ctor(haveaseat.Entities.Reservation)
  name.vb: New(Reservation)
  fullName: haveaseat.DTOs.LongTimeReservationToCheckDTQ.LongTimeReservationToCheckDTQ(haveaseat.Entities.Reservation)
  fullName.vb: haveaseat.DTOs.LongTimeReservationToCheckDTQ.New(haveaseat.Entities.Reservation)
  nameWithType: LongTimeReservationToCheckDTQ.LongTimeReservationToCheckDTQ(Reservation)
  nameWithType.vb: LongTimeReservationToCheckDTQ.New(Reservation)
- uid: haveaseat.DTOs.LongTimeReservationToCheckDTQ.#ctor*
  name: LongTimeReservationToCheckDTQ
  href: api/haveaseat.DTOs.LongTimeReservationToCheckDTQ.html#haveaseat_DTOs_LongTimeReservationToCheckDTQ__ctor_
  commentId: Overload:haveaseat.DTOs.LongTimeReservationToCheckDTQ.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.LongTimeReservationToCheckDTQ.LongTimeReservationToCheckDTQ
  fullName.vb: haveaseat.DTOs.LongTimeReservationToCheckDTQ.New
  nameWithType: LongTimeReservationToCheckDTQ.LongTimeReservationToCheckDTQ
  nameWithType.vb: LongTimeReservationToCheckDTQ.New
- uid: haveaseat.DTOs.LongTimeReservationToCheckDTQ.Date
  name: Date
  href: api/haveaseat.DTOs.LongTimeReservationToCheckDTQ.html#haveaseat_DTOs_LongTimeReservationToCheckDTQ_Date
  commentId: P:haveaseat.DTOs.LongTimeReservationToCheckDTQ.Date
  fullName: haveaseat.DTOs.LongTimeReservationToCheckDTQ.Date
  nameWithType: LongTimeReservationToCheckDTQ.Date
- uid: haveaseat.DTOs.LongTimeReservationToCheckDTQ.Date*
  name: Date
  href: api/haveaseat.DTOs.LongTimeReservationToCheckDTQ.html#haveaseat_DTOs_LongTimeReservationToCheckDTQ_Date_
  commentId: Overload:haveaseat.DTOs.LongTimeReservationToCheckDTQ.Date
  isSpec: "True"
  fullName: haveaseat.DTOs.LongTimeReservationToCheckDTQ.Date
  nameWithType: LongTimeReservationToCheckDTQ.Date
- uid: haveaseat.DTOs.LongTimeReservationToCheckDTQ.User
  name: User
  href: api/haveaseat.DTOs.LongTimeReservationToCheckDTQ.html#haveaseat_DTOs_LongTimeReservationToCheckDTQ_User
  commentId: P:haveaseat.DTOs.LongTimeReservationToCheckDTQ.User
  fullName: haveaseat.DTOs.LongTimeReservationToCheckDTQ.User
  nameWithType: LongTimeReservationToCheckDTQ.User
- uid: haveaseat.DTOs.LongTimeReservationToCheckDTQ.User*
  name: User
  href: api/haveaseat.DTOs.LongTimeReservationToCheckDTQ.html#haveaseat_DTOs_LongTimeReservationToCheckDTQ_User_
  commentId: Overload:haveaseat.DTOs.LongTimeReservationToCheckDTQ.User
  isSpec: "True"
  fullName: haveaseat.DTOs.LongTimeReservationToCheckDTQ.User
  nameWithType: LongTimeReservationToCheckDTQ.User
- uid: haveaseat.DTOs.NewDeskDTO
  name: NewDeskDTO
  href: api/haveaseat.DTOs.NewDeskDTO.html
  commentId: T:haveaseat.DTOs.NewDeskDTO
  fullName: haveaseat.DTOs.NewDeskDTO
  nameWithType: NewDeskDTO
- uid: haveaseat.DTOs.NewDeskDTO.#ctor
  name: NewDeskDTO()
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO__ctor
  commentId: M:haveaseat.DTOs.NewDeskDTO.#ctor
  name.vb: New()
  fullName: haveaseat.DTOs.NewDeskDTO.NewDeskDTO()
  fullName.vb: haveaseat.DTOs.NewDeskDTO.New()
  nameWithType: NewDeskDTO.NewDeskDTO()
  nameWithType.vb: NewDeskDTO.New()
- uid: haveaseat.DTOs.NewDeskDTO.#ctor(haveaseat.Entities.Desk)
  name: NewDeskDTO(Desk)
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO__ctor_haveaseat_Entities_Desk_
  commentId: M:haveaseat.DTOs.NewDeskDTO.#ctor(haveaseat.Entities.Desk)
  name.vb: New(Desk)
  fullName: haveaseat.DTOs.NewDeskDTO.NewDeskDTO(haveaseat.Entities.Desk)
  fullName.vb: haveaseat.DTOs.NewDeskDTO.New(haveaseat.Entities.Desk)
  nameWithType: NewDeskDTO.NewDeskDTO(Desk)
  nameWithType.vb: NewDeskDTO.New(Desk)
- uid: haveaseat.DTOs.NewDeskDTO.#ctor*
  name: NewDeskDTO
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO__ctor_
  commentId: Overload:haveaseat.DTOs.NewDeskDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.NewDeskDTO.NewDeskDTO
  fullName.vb: haveaseat.DTOs.NewDeskDTO.New
  nameWithType: NewDeskDTO.NewDeskDTO
  nameWithType.vb: NewDeskDTO.New
- uid: haveaseat.DTOs.NewDeskDTO.ChairPosition
  name: ChairPosition
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO_ChairPosition
  commentId: P:haveaseat.DTOs.NewDeskDTO.ChairPosition
  fullName: haveaseat.DTOs.NewDeskDTO.ChairPosition
  nameWithType: NewDeskDTO.ChairPosition
- uid: haveaseat.DTOs.NewDeskDTO.ChairPosition*
  name: ChairPosition
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO_ChairPosition_
  commentId: Overload:haveaseat.DTOs.NewDeskDTO.ChairPosition
  isSpec: "True"
  fullName: haveaseat.DTOs.NewDeskDTO.ChairPosition
  nameWithType: NewDeskDTO.ChairPosition
- uid: haveaseat.DTOs.NewDeskDTO.PositionX
  name: PositionX
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO_PositionX
  commentId: P:haveaseat.DTOs.NewDeskDTO.PositionX
  fullName: haveaseat.DTOs.NewDeskDTO.PositionX
  nameWithType: NewDeskDTO.PositionX
- uid: haveaseat.DTOs.NewDeskDTO.PositionX*
  name: PositionX
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO_PositionX_
  commentId: Overload:haveaseat.DTOs.NewDeskDTO.PositionX
  isSpec: "True"
  fullName: haveaseat.DTOs.NewDeskDTO.PositionX
  nameWithType: NewDeskDTO.PositionX
- uid: haveaseat.DTOs.NewDeskDTO.PositionY
  name: PositionY
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO_PositionY
  commentId: P:haveaseat.DTOs.NewDeskDTO.PositionY
  fullName: haveaseat.DTOs.NewDeskDTO.PositionY
  nameWithType: NewDeskDTO.PositionY
- uid: haveaseat.DTOs.NewDeskDTO.PositionY*
  name: PositionY
  href: api/haveaseat.DTOs.NewDeskDTO.html#haveaseat_DTOs_NewDeskDTO_PositionY_
  commentId: Overload:haveaseat.DTOs.NewDeskDTO.PositionY
  isSpec: "True"
  fullName: haveaseat.DTOs.NewDeskDTO.PositionY
  nameWithType: NewDeskDTO.PositionY
- uid: haveaseat.DTOs.NewForbiddenDateDTO
  name: NewForbiddenDateDTO
  href: api/haveaseat.DTOs.NewForbiddenDateDTO.html
  commentId: T:haveaseat.DTOs.NewForbiddenDateDTO
  fullName: haveaseat.DTOs.NewForbiddenDateDTO
  nameWithType: NewForbiddenDateDTO
- uid: haveaseat.DTOs.NewForbiddenDateDTO.#ctor
  name: NewForbiddenDateDTO()
  href: api/haveaseat.DTOs.NewForbiddenDateDTO.html#haveaseat_DTOs_NewForbiddenDateDTO__ctor
  commentId: M:haveaseat.DTOs.NewForbiddenDateDTO.#ctor
  name.vb: New()
  fullName: haveaseat.DTOs.NewForbiddenDateDTO.NewForbiddenDateDTO()
  fullName.vb: haveaseat.DTOs.NewForbiddenDateDTO.New()
  nameWithType: NewForbiddenDateDTO.NewForbiddenDateDTO()
  nameWithType.vb: NewForbiddenDateDTO.New()
- uid: haveaseat.DTOs.NewForbiddenDateDTO.#ctor(haveaseat.Entities.ForbiddenDate)
  name: NewForbiddenDateDTO(ForbiddenDate)
  href: api/haveaseat.DTOs.NewForbiddenDateDTO.html#haveaseat_DTOs_NewForbiddenDateDTO__ctor_haveaseat_Entities_ForbiddenDate_
  commentId: M:haveaseat.DTOs.NewForbiddenDateDTO.#ctor(haveaseat.Entities.ForbiddenDate)
  name.vb: New(ForbiddenDate)
  fullName: haveaseat.DTOs.NewForbiddenDateDTO.NewForbiddenDateDTO(haveaseat.Entities.ForbiddenDate)
  fullName.vb: haveaseat.DTOs.NewForbiddenDateDTO.New(haveaseat.Entities.ForbiddenDate)
  nameWithType: NewForbiddenDateDTO.NewForbiddenDateDTO(ForbiddenDate)
  nameWithType.vb: NewForbiddenDateDTO.New(ForbiddenDate)
- uid: haveaseat.DTOs.NewForbiddenDateDTO.#ctor*
  name: NewForbiddenDateDTO
  href: api/haveaseat.DTOs.NewForbiddenDateDTO.html#haveaseat_DTOs_NewForbiddenDateDTO__ctor_
  commentId: Overload:haveaseat.DTOs.NewForbiddenDateDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.NewForbiddenDateDTO.NewForbiddenDateDTO
  fullName.vb: haveaseat.DTOs.NewForbiddenDateDTO.New
  nameWithType: NewForbiddenDateDTO.NewForbiddenDateDTO
  nameWithType.vb: NewForbiddenDateDTO.New
- uid: haveaseat.DTOs.NewForbiddenDateDTO.Date
  name: Date
  href: api/haveaseat.DTOs.NewForbiddenDateDTO.html#haveaseat_DTOs_NewForbiddenDateDTO_Date
  commentId: P:haveaseat.DTOs.NewForbiddenDateDTO.Date
  fullName: haveaseat.DTOs.NewForbiddenDateDTO.Date
  nameWithType: NewForbiddenDateDTO.Date
- uid: haveaseat.DTOs.NewForbiddenDateDTO.Date*
  name: Date
  href: api/haveaseat.DTOs.NewForbiddenDateDTO.html#haveaseat_DTOs_NewForbiddenDateDTO_Date_
  commentId: Overload:haveaseat.DTOs.NewForbiddenDateDTO.Date
  isSpec: "True"
  fullName: haveaseat.DTOs.NewForbiddenDateDTO.Date
  nameWithType: NewForbiddenDateDTO.Date
- uid: haveaseat.DTOs.NewForbiddenDateDTO.Description
  name: Description
  href: api/haveaseat.DTOs.NewForbiddenDateDTO.html#haveaseat_DTOs_NewForbiddenDateDTO_Description
  commentId: P:haveaseat.DTOs.NewForbiddenDateDTO.Description
  fullName: haveaseat.DTOs.NewForbiddenDateDTO.Description
  nameWithType: NewForbiddenDateDTO.Description
- uid: haveaseat.DTOs.NewForbiddenDateDTO.Description*
  name: Description
  href: api/haveaseat.DTOs.NewForbiddenDateDTO.html#haveaseat_DTOs_NewForbiddenDateDTO_Description_
  commentId: Overload:haveaseat.DTOs.NewForbiddenDateDTO.Description
  isSpec: "True"
  fullName: haveaseat.DTOs.NewForbiddenDateDTO.Description
  nameWithType: NewForbiddenDateDTO.Description
- uid: haveaseat.DTOs.NewReservationDTO
  name: NewReservationDTO
  href: api/haveaseat.DTOs.NewReservationDTO.html
  commentId: T:haveaseat.DTOs.NewReservationDTO
  fullName: haveaseat.DTOs.NewReservationDTO
  nameWithType: NewReservationDTO
- uid: haveaseat.DTOs.NewReservationDTO.#ctor
  name: NewReservationDTO()
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO__ctor
  commentId: M:haveaseat.DTOs.NewReservationDTO.#ctor
  name.vb: New()
  fullName: haveaseat.DTOs.NewReservationDTO.NewReservationDTO()
  fullName.vb: haveaseat.DTOs.NewReservationDTO.New()
  nameWithType: NewReservationDTO.NewReservationDTO()
  nameWithType.vb: NewReservationDTO.New()
- uid: haveaseat.DTOs.NewReservationDTO.#ctor(haveaseat.Entities.Reservation)
  name: NewReservationDTO(Reservation)
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO__ctor_haveaseat_Entities_Reservation_
  commentId: M:haveaseat.DTOs.NewReservationDTO.#ctor(haveaseat.Entities.Reservation)
  name.vb: New(Reservation)
  fullName: haveaseat.DTOs.NewReservationDTO.NewReservationDTO(haveaseat.Entities.Reservation)
  fullName.vb: haveaseat.DTOs.NewReservationDTO.New(haveaseat.Entities.Reservation)
  nameWithType: NewReservationDTO.NewReservationDTO(Reservation)
  nameWithType.vb: NewReservationDTO.New(Reservation)
- uid: haveaseat.DTOs.NewReservationDTO.#ctor*
  name: NewReservationDTO
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO__ctor_
  commentId: Overload:haveaseat.DTOs.NewReservationDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.NewReservationDTO.NewReservationDTO
  fullName.vb: haveaseat.DTOs.NewReservationDTO.New
  nameWithType: NewReservationDTO.NewReservationDTO
  nameWithType.vb: NewReservationDTO.New
- uid: haveaseat.DTOs.NewReservationDTO.Date
  name: Date
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO_Date
  commentId: P:haveaseat.DTOs.NewReservationDTO.Date
  fullName: haveaseat.DTOs.NewReservationDTO.Date
  nameWithType: NewReservationDTO.Date
- uid: haveaseat.DTOs.NewReservationDTO.Date*
  name: Date
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO_Date_
  commentId: Overload:haveaseat.DTOs.NewReservationDTO.Date
  isSpec: "True"
  fullName: haveaseat.DTOs.NewReservationDTO.Date
  nameWithType: NewReservationDTO.Date
- uid: haveaseat.DTOs.NewReservationDTO.DeskId
  name: DeskId
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO_DeskId
  commentId: P:haveaseat.DTOs.NewReservationDTO.DeskId
  fullName: haveaseat.DTOs.NewReservationDTO.DeskId
  nameWithType: NewReservationDTO.DeskId
- uid: haveaseat.DTOs.NewReservationDTO.DeskId*
  name: DeskId
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO_DeskId_
  commentId: Overload:haveaseat.DTOs.NewReservationDTO.DeskId
  isSpec: "True"
  fullName: haveaseat.DTOs.NewReservationDTO.DeskId
  nameWithType: NewReservationDTO.DeskId
- uid: haveaseat.DTOs.NewReservationDTO.UserId
  name: UserId
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO_UserId
  commentId: P:haveaseat.DTOs.NewReservationDTO.UserId
  fullName: haveaseat.DTOs.NewReservationDTO.UserId
  nameWithType: NewReservationDTO.UserId
- uid: haveaseat.DTOs.NewReservationDTO.UserId*
  name: UserId
  href: api/haveaseat.DTOs.NewReservationDTO.html#haveaseat_DTOs_NewReservationDTO_UserId_
  commentId: Overload:haveaseat.DTOs.NewReservationDTO.UserId
  isSpec: "True"
  fullName: haveaseat.DTOs.NewReservationDTO.UserId
  nameWithType: NewReservationDTO.UserId
- uid: haveaseat.DTOs.NewUserDTO
  name: NewUserDTO
  href: api/haveaseat.DTOs.NewUserDTO.html
  commentId: T:haveaseat.DTOs.NewUserDTO
  fullName: haveaseat.DTOs.NewUserDTO
  nameWithType: NewUserDTO
- uid: haveaseat.DTOs.NewUserDTO.#ctor
  name: NewUserDTO()
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO__ctor
  commentId: M:haveaseat.DTOs.NewUserDTO.#ctor
  name.vb: New()
  fullName: haveaseat.DTOs.NewUserDTO.NewUserDTO()
  fullName.vb: haveaseat.DTOs.NewUserDTO.New()
  nameWithType: NewUserDTO.NewUserDTO()
  nameWithType.vb: NewUserDTO.New()
- uid: haveaseat.DTOs.NewUserDTO.#ctor(haveaseat.Entities.User)
  name: NewUserDTO(User)
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO__ctor_haveaseat_Entities_User_
  commentId: M:haveaseat.DTOs.NewUserDTO.#ctor(haveaseat.Entities.User)
  name.vb: New(User)
  fullName: haveaseat.DTOs.NewUserDTO.NewUserDTO(haveaseat.Entities.User)
  fullName.vb: haveaseat.DTOs.NewUserDTO.New(haveaseat.Entities.User)
  nameWithType: NewUserDTO.NewUserDTO(User)
  nameWithType.vb: NewUserDTO.New(User)
- uid: haveaseat.DTOs.NewUserDTO.#ctor*
  name: NewUserDTO
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO__ctor_
  commentId: Overload:haveaseat.DTOs.NewUserDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.NewUserDTO.NewUserDTO
  fullName.vb: haveaseat.DTOs.NewUserDTO.New
  nameWithType: NewUserDTO.NewUserDTO
  nameWithType.vb: NewUserDTO.New
- uid: haveaseat.DTOs.NewUserDTO.Email
  name: Email
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO_Email
  commentId: P:haveaseat.DTOs.NewUserDTO.Email
  fullName: haveaseat.DTOs.NewUserDTO.Email
  nameWithType: NewUserDTO.Email
- uid: haveaseat.DTOs.NewUserDTO.Email*
  name: Email
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO_Email_
  commentId: Overload:haveaseat.DTOs.NewUserDTO.Email
  isSpec: "True"
  fullName: haveaseat.DTOs.NewUserDTO.Email
  nameWithType: NewUserDTO.Email
- uid: haveaseat.DTOs.NewUserDTO.Name
  name: Name
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO_Name
  commentId: P:haveaseat.DTOs.NewUserDTO.Name
  fullName: haveaseat.DTOs.NewUserDTO.Name
  nameWithType: NewUserDTO.Name
- uid: haveaseat.DTOs.NewUserDTO.Name*
  name: Name
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO_Name_
  commentId: Overload:haveaseat.DTOs.NewUserDTO.Name
  isSpec: "True"
  fullName: haveaseat.DTOs.NewUserDTO.Name
  nameWithType: NewUserDTO.Name
- uid: haveaseat.DTOs.NewUserDTO.Password
  name: Password
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO_Password
  commentId: P:haveaseat.DTOs.NewUserDTO.Password
  fullName: haveaseat.DTOs.NewUserDTO.Password
  nameWithType: NewUserDTO.Password
- uid: haveaseat.DTOs.NewUserDTO.Password*
  name: Password
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO_Password_
  commentId: Overload:haveaseat.DTOs.NewUserDTO.Password
  isSpec: "True"
  fullName: haveaseat.DTOs.NewUserDTO.Password
  nameWithType: NewUserDTO.Password
- uid: haveaseat.DTOs.NewUserDTO.Surname
  name: Surname
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO_Surname
  commentId: P:haveaseat.DTOs.NewUserDTO.Surname
  fullName: haveaseat.DTOs.NewUserDTO.Surname
  nameWithType: NewUserDTO.Surname
- uid: haveaseat.DTOs.NewUserDTO.Surname*
  name: Surname
  href: api/haveaseat.DTOs.NewUserDTO.html#haveaseat_DTOs_NewUserDTO_Surname_
  commentId: Overload:haveaseat.DTOs.NewUserDTO.Surname
  isSpec: "True"
  fullName: haveaseat.DTOs.NewUserDTO.Surname
  nameWithType: NewUserDTO.Surname
- uid: haveaseat.DTOs.NewUserLoginDTO
  name: NewUserLoginDTO
  href: api/haveaseat.DTOs.NewUserLoginDTO.html
  commentId: T:haveaseat.DTOs.NewUserLoginDTO
  fullName: haveaseat.DTOs.NewUserLoginDTO
  nameWithType: NewUserLoginDTO
- uid: haveaseat.DTOs.NewUserLoginDTO.#ctor
  name: NewUserLoginDTO()
  href: api/haveaseat.DTOs.NewUserLoginDTO.html#haveaseat_DTOs_NewUserLoginDTO__ctor
  commentId: M:haveaseat.DTOs.NewUserLoginDTO.#ctor
  name.vb: New()
  fullName: haveaseat.DTOs.NewUserLoginDTO.NewUserLoginDTO()
  fullName.vb: haveaseat.DTOs.NewUserLoginDTO.New()
  nameWithType: NewUserLoginDTO.NewUserLoginDTO()
  nameWithType.vb: NewUserLoginDTO.New()
- uid: haveaseat.DTOs.NewUserLoginDTO.#ctor(haveaseat.Entities.User)
  name: NewUserLoginDTO(User)
  href: api/haveaseat.DTOs.NewUserLoginDTO.html#haveaseat_DTOs_NewUserLoginDTO__ctor_haveaseat_Entities_User_
  commentId: M:haveaseat.DTOs.NewUserLoginDTO.#ctor(haveaseat.Entities.User)
  name.vb: New(User)
  fullName: haveaseat.DTOs.NewUserLoginDTO.NewUserLoginDTO(haveaseat.Entities.User)
  fullName.vb: haveaseat.DTOs.NewUserLoginDTO.New(haveaseat.Entities.User)
  nameWithType: NewUserLoginDTO.NewUserLoginDTO(User)
  nameWithType.vb: NewUserLoginDTO.New(User)
- uid: haveaseat.DTOs.NewUserLoginDTO.#ctor*
  name: NewUserLoginDTO
  href: api/haveaseat.DTOs.NewUserLoginDTO.html#haveaseat_DTOs_NewUserLoginDTO__ctor_
  commentId: Overload:haveaseat.DTOs.NewUserLoginDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.NewUserLoginDTO.NewUserLoginDTO
  fullName.vb: haveaseat.DTOs.NewUserLoginDTO.New
  nameWithType: NewUserLoginDTO.NewUserLoginDTO
  nameWithType.vb: NewUserLoginDTO.New
- uid: haveaseat.DTOs.NewUserLoginDTO.Email
  name: Email
  href: api/haveaseat.DTOs.NewUserLoginDTO.html#haveaseat_DTOs_NewUserLoginDTO_Email
  commentId: P:haveaseat.DTOs.NewUserLoginDTO.Email
  fullName: haveaseat.DTOs.NewUserLoginDTO.Email
  nameWithType: NewUserLoginDTO.Email
- uid: haveaseat.DTOs.NewUserLoginDTO.Email*
  name: Email
  href: api/haveaseat.DTOs.NewUserLoginDTO.html#haveaseat_DTOs_NewUserLoginDTO_Email_
  commentId: Overload:haveaseat.DTOs.NewUserLoginDTO.Email
  isSpec: "True"
  fullName: haveaseat.DTOs.NewUserLoginDTO.Email
  nameWithType: NewUserLoginDTO.Email
- uid: haveaseat.DTOs.NewUserLoginDTO.Password
  name: Password
  href: api/haveaseat.DTOs.NewUserLoginDTO.html#haveaseat_DTOs_NewUserLoginDTO_Password
  commentId: P:haveaseat.DTOs.NewUserLoginDTO.Password
  fullName: haveaseat.DTOs.NewUserLoginDTO.Password
  nameWithType: NewUserLoginDTO.Password
- uid: haveaseat.DTOs.NewUserLoginDTO.Password*
  name: Password
  href: api/haveaseat.DTOs.NewUserLoginDTO.html#haveaseat_DTOs_NewUserLoginDTO_Password_
  commentId: Overload:haveaseat.DTOs.NewUserLoginDTO.Password
  isSpec: "True"
  fullName: haveaseat.DTOs.NewUserLoginDTO.Password
  nameWithType: NewUserLoginDTO.Password
- uid: haveaseat.DTOs.ReservationDTO
  name: ReservationDTO
  href: api/haveaseat.DTOs.ReservationDTO.html
  commentId: T:haveaseat.DTOs.ReservationDTO
  fullName: haveaseat.DTOs.ReservationDTO
  nameWithType: ReservationDTO
- uid: haveaseat.DTOs.ReservationDTO.#ctor(haveaseat.Entities.Reservation)
  name: ReservationDTO(Reservation)
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO__ctor_haveaseat_Entities_Reservation_
  commentId: M:haveaseat.DTOs.ReservationDTO.#ctor(haveaseat.Entities.Reservation)
  name.vb: New(Reservation)
  fullName: haveaseat.DTOs.ReservationDTO.ReservationDTO(haveaseat.Entities.Reservation)
  fullName.vb: haveaseat.DTOs.ReservationDTO.New(haveaseat.Entities.Reservation)
  nameWithType: ReservationDTO.ReservationDTO(Reservation)
  nameWithType.vb: ReservationDTO.New(Reservation)
- uid: haveaseat.DTOs.ReservationDTO.#ctor*
  name: ReservationDTO
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO__ctor_
  commentId: Overload:haveaseat.DTOs.ReservationDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.ReservationDTO.ReservationDTO
  fullName.vb: haveaseat.DTOs.ReservationDTO.New
  nameWithType: ReservationDTO.ReservationDTO
  nameWithType.vb: ReservationDTO.New
- uid: haveaseat.DTOs.ReservationDTO.Date
  name: Date
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO_Date
  commentId: P:haveaseat.DTOs.ReservationDTO.Date
  fullName: haveaseat.DTOs.ReservationDTO.Date
  nameWithType: ReservationDTO.Date
- uid: haveaseat.DTOs.ReservationDTO.Date*
  name: Date
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO_Date_
  commentId: Overload:haveaseat.DTOs.ReservationDTO.Date
  isSpec: "True"
  fullName: haveaseat.DTOs.ReservationDTO.Date
  nameWithType: ReservationDTO.Date
- uid: haveaseat.DTOs.ReservationDTO.Desk
  name: Desk
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO_Desk
  commentId: P:haveaseat.DTOs.ReservationDTO.Desk
  fullName: haveaseat.DTOs.ReservationDTO.Desk
  nameWithType: ReservationDTO.Desk
- uid: haveaseat.DTOs.ReservationDTO.Desk*
  name: Desk
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO_Desk_
  commentId: Overload:haveaseat.DTOs.ReservationDTO.Desk
  isSpec: "True"
  fullName: haveaseat.DTOs.ReservationDTO.Desk
  nameWithType: ReservationDTO.Desk
- uid: haveaseat.DTOs.ReservationDTO.Id
  name: Id
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO_Id
  commentId: P:haveaseat.DTOs.ReservationDTO.Id
  fullName: haveaseat.DTOs.ReservationDTO.Id
  nameWithType: ReservationDTO.Id
- uid: haveaseat.DTOs.ReservationDTO.Id*
  name: Id
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO_Id_
  commentId: Overload:haveaseat.DTOs.ReservationDTO.Id
  isSpec: "True"
  fullName: haveaseat.DTOs.ReservationDTO.Id
  nameWithType: ReservationDTO.Id
- uid: haveaseat.DTOs.ReservationDTO.User
  name: User
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO_User
  commentId: P:haveaseat.DTOs.ReservationDTO.User
  fullName: haveaseat.DTOs.ReservationDTO.User
  nameWithType: ReservationDTO.User
- uid: haveaseat.DTOs.ReservationDTO.User*
  name: User
  href: api/haveaseat.DTOs.ReservationDTO.html#haveaseat_DTOs_ReservationDTO_User_
  commentId: Overload:haveaseat.DTOs.ReservationDTO.User
  isSpec: "True"
  fullName: haveaseat.DTOs.ReservationDTO.User
  nameWithType: ReservationDTO.User
- uid: haveaseat.DTOs.RoomDTO
  name: RoomDTO
  href: api/haveaseat.DTOs.RoomDTO.html
  commentId: T:haveaseat.DTOs.RoomDTO
  fullName: haveaseat.DTOs.RoomDTO
  nameWithType: RoomDTO
- uid: haveaseat.DTOs.RoomDTO.#ctor(haveaseat.Entities.Room)
  name: RoomDTO(Room)
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO__ctor_haveaseat_Entities_Room_
  commentId: M:haveaseat.DTOs.RoomDTO.#ctor(haveaseat.Entities.Room)
  name.vb: New(Room)
  fullName: haveaseat.DTOs.RoomDTO.RoomDTO(haveaseat.Entities.Room)
  fullName.vb: haveaseat.DTOs.RoomDTO.New(haveaseat.Entities.Room)
  nameWithType: RoomDTO.RoomDTO(Room)
  nameWithType.vb: RoomDTO.New(Room)
- uid: haveaseat.DTOs.RoomDTO.#ctor*
  name: RoomDTO
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO__ctor_
  commentId: Overload:haveaseat.DTOs.RoomDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.RoomDTO.RoomDTO
  fullName.vb: haveaseat.DTOs.RoomDTO.New
  nameWithType: RoomDTO.RoomDTO
  nameWithType.vb: RoomDTO.New
- uid: haveaseat.DTOs.RoomDTO.Cells
  name: Cells
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO_Cells
  commentId: P:haveaseat.DTOs.RoomDTO.Cells
  fullName: haveaseat.DTOs.RoomDTO.Cells
  nameWithType: RoomDTO.Cells
- uid: haveaseat.DTOs.RoomDTO.Cells*
  name: Cells
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO_Cells_
  commentId: Overload:haveaseat.DTOs.RoomDTO.Cells
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTO.Cells
  nameWithType: RoomDTO.Cells
- uid: haveaseat.DTOs.RoomDTO.Desks
  name: Desks
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO_Desks
  commentId: P:haveaseat.DTOs.RoomDTO.Desks
  fullName: haveaseat.DTOs.RoomDTO.Desks
  nameWithType: RoomDTO.Desks
- uid: haveaseat.DTOs.RoomDTO.Desks*
  name: Desks
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO_Desks_
  commentId: Overload:haveaseat.DTOs.RoomDTO.Desks
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTO.Desks
  nameWithType: RoomDTO.Desks
- uid: haveaseat.DTOs.RoomDTO.Id
  name: Id
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO_Id
  commentId: P:haveaseat.DTOs.RoomDTO.Id
  fullName: haveaseat.DTOs.RoomDTO.Id
  nameWithType: RoomDTO.Id
- uid: haveaseat.DTOs.RoomDTO.Id*
  name: Id
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO_Id_
  commentId: Overload:haveaseat.DTOs.RoomDTO.Id
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTO.Id
  nameWithType: RoomDTO.Id
- uid: haveaseat.DTOs.RoomDTO.Name
  name: Name
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO_Name
  commentId: P:haveaseat.DTOs.RoomDTO.Name
  fullName: haveaseat.DTOs.RoomDTO.Name
  nameWithType: RoomDTO.Name
- uid: haveaseat.DTOs.RoomDTO.Name*
  name: Name
  href: api/haveaseat.DTOs.RoomDTO.html#haveaseat_DTOs_RoomDTO_Name_
  commentId: Overload:haveaseat.DTOs.RoomDTO.Name
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTO.Name
  nameWithType: RoomDTO.Name
- uid: haveaseat.DTOs.RoomDTOCells
  name: RoomDTOCells
  href: api/haveaseat.DTOs.RoomDTOCells.html
  commentId: T:haveaseat.DTOs.RoomDTOCells
  fullName: haveaseat.DTOs.RoomDTOCells
  nameWithType: RoomDTOCells
- uid: haveaseat.DTOs.RoomDTOCells.#ctor(haveaseat.Entities.Room)
  name: RoomDTOCells(Room)
  href: api/haveaseat.DTOs.RoomDTOCells.html#haveaseat_DTOs_RoomDTOCells__ctor_haveaseat_Entities_Room_
  commentId: M:haveaseat.DTOs.RoomDTOCells.#ctor(haveaseat.Entities.Room)
  name.vb: New(Room)
  fullName: haveaseat.DTOs.RoomDTOCells.RoomDTOCells(haveaseat.Entities.Room)
  fullName.vb: haveaseat.DTOs.RoomDTOCells.New(haveaseat.Entities.Room)
  nameWithType: RoomDTOCells.RoomDTOCells(Room)
  nameWithType.vb: RoomDTOCells.New(Room)
- uid: haveaseat.DTOs.RoomDTOCells.#ctor*
  name: RoomDTOCells
  href: api/haveaseat.DTOs.RoomDTOCells.html#haveaseat_DTOs_RoomDTOCells__ctor_
  commentId: Overload:haveaseat.DTOs.RoomDTOCells.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.RoomDTOCells.RoomDTOCells
  fullName.vb: haveaseat.DTOs.RoomDTOCells.New
  nameWithType: RoomDTOCells.RoomDTOCells
  nameWithType.vb: RoomDTOCells.New
- uid: haveaseat.DTOs.RoomDTOCells.Cells
  name: Cells
  href: api/haveaseat.DTOs.RoomDTOCells.html#haveaseat_DTOs_RoomDTOCells_Cells
  commentId: P:haveaseat.DTOs.RoomDTOCells.Cells
  fullName: haveaseat.DTOs.RoomDTOCells.Cells
  nameWithType: RoomDTOCells.Cells
- uid: haveaseat.DTOs.RoomDTOCells.Cells*
  name: Cells
  href: api/haveaseat.DTOs.RoomDTOCells.html#haveaseat_DTOs_RoomDTOCells_Cells_
  commentId: Overload:haveaseat.DTOs.RoomDTOCells.Cells
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTOCells.Cells
  nameWithType: RoomDTOCells.Cells
- uid: haveaseat.DTOs.RoomDTOCells.Id
  name: Id
  href: api/haveaseat.DTOs.RoomDTOCells.html#haveaseat_DTOs_RoomDTOCells_Id
  commentId: P:haveaseat.DTOs.RoomDTOCells.Id
  fullName: haveaseat.DTOs.RoomDTOCells.Id
  nameWithType: RoomDTOCells.Id
- uid: haveaseat.DTOs.RoomDTOCells.Id*
  name: Id
  href: api/haveaseat.DTOs.RoomDTOCells.html#haveaseat_DTOs_RoomDTOCells_Id_
  commentId: Overload:haveaseat.DTOs.RoomDTOCells.Id
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTOCells.Id
  nameWithType: RoomDTOCells.Id
- uid: haveaseat.DTOs.RoomDTOCells.Name
  name: Name
  href: api/haveaseat.DTOs.RoomDTOCells.html#haveaseat_DTOs_RoomDTOCells_Name
  commentId: P:haveaseat.DTOs.RoomDTOCells.Name
  fullName: haveaseat.DTOs.RoomDTOCells.Name
  nameWithType: RoomDTOCells.Name
- uid: haveaseat.DTOs.RoomDTOCells.Name*
  name: Name
  href: api/haveaseat.DTOs.RoomDTOCells.html#haveaseat_DTOs_RoomDTOCells_Name_
  commentId: Overload:haveaseat.DTOs.RoomDTOCells.Name
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTOCells.Name
  nameWithType: RoomDTOCells.Name
- uid: haveaseat.DTOs.RoomDTODesks
  name: RoomDTODesks
  href: api/haveaseat.DTOs.RoomDTODesks.html
  commentId: T:haveaseat.DTOs.RoomDTODesks
  fullName: haveaseat.DTOs.RoomDTODesks
  nameWithType: RoomDTODesks
- uid: haveaseat.DTOs.RoomDTODesks.#ctor(haveaseat.Entities.Room)
  name: RoomDTODesks(Room)
  href: api/haveaseat.DTOs.RoomDTODesks.html#haveaseat_DTOs_RoomDTODesks__ctor_haveaseat_Entities_Room_
  commentId: M:haveaseat.DTOs.RoomDTODesks.#ctor(haveaseat.Entities.Room)
  name.vb: New(Room)
  fullName: haveaseat.DTOs.RoomDTODesks.RoomDTODesks(haveaseat.Entities.Room)
  fullName.vb: haveaseat.DTOs.RoomDTODesks.New(haveaseat.Entities.Room)
  nameWithType: RoomDTODesks.RoomDTODesks(Room)
  nameWithType.vb: RoomDTODesks.New(Room)
- uid: haveaseat.DTOs.RoomDTODesks.#ctor*
  name: RoomDTODesks
  href: api/haveaseat.DTOs.RoomDTODesks.html#haveaseat_DTOs_RoomDTODesks__ctor_
  commentId: Overload:haveaseat.DTOs.RoomDTODesks.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.RoomDTODesks.RoomDTODesks
  fullName.vb: haveaseat.DTOs.RoomDTODesks.New
  nameWithType: RoomDTODesks.RoomDTODesks
  nameWithType.vb: RoomDTODesks.New
- uid: haveaseat.DTOs.RoomDTODesks.Desks
  name: Desks
  href: api/haveaseat.DTOs.RoomDTODesks.html#haveaseat_DTOs_RoomDTODesks_Desks
  commentId: P:haveaseat.DTOs.RoomDTODesks.Desks
  fullName: haveaseat.DTOs.RoomDTODesks.Desks
  nameWithType: RoomDTODesks.Desks
- uid: haveaseat.DTOs.RoomDTODesks.Desks*
  name: Desks
  href: api/haveaseat.DTOs.RoomDTODesks.html#haveaseat_DTOs_RoomDTODesks_Desks_
  commentId: Overload:haveaseat.DTOs.RoomDTODesks.Desks
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTODesks.Desks
  nameWithType: RoomDTODesks.Desks
- uid: haveaseat.DTOs.RoomDTODesks.Id
  name: Id
  href: api/haveaseat.DTOs.RoomDTODesks.html#haveaseat_DTOs_RoomDTODesks_Id
  commentId: P:haveaseat.DTOs.RoomDTODesks.Id
  fullName: haveaseat.DTOs.RoomDTODesks.Id
  nameWithType: RoomDTODesks.Id
- uid: haveaseat.DTOs.RoomDTODesks.Id*
  name: Id
  href: api/haveaseat.DTOs.RoomDTODesks.html#haveaseat_DTOs_RoomDTODesks_Id_
  commentId: Overload:haveaseat.DTOs.RoomDTODesks.Id
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTODesks.Id
  nameWithType: RoomDTODesks.Id
- uid: haveaseat.DTOs.RoomDTODesks.Name
  name: Name
  href: api/haveaseat.DTOs.RoomDTODesks.html#haveaseat_DTOs_RoomDTODesks_Name
  commentId: P:haveaseat.DTOs.RoomDTODesks.Name
  fullName: haveaseat.DTOs.RoomDTODesks.Name
  nameWithType: RoomDTODesks.Name
- uid: haveaseat.DTOs.RoomDTODesks.Name*
  name: Name
  href: api/haveaseat.DTOs.RoomDTODesks.html#haveaseat_DTOs_RoomDTODesks_Name_
  commentId: Overload:haveaseat.DTOs.RoomDTODesks.Name
  isSpec: "True"
  fullName: haveaseat.DTOs.RoomDTODesks.Name
  nameWithType: RoomDTODesks.Name
- uid: haveaseat.DTOs.UserDTO
  name: UserDTO
  href: api/haveaseat.DTOs.UserDTO.html
  commentId: T:haveaseat.DTOs.UserDTO
  fullName: haveaseat.DTOs.UserDTO
  nameWithType: UserDTO
- uid: haveaseat.DTOs.UserDTO.#ctor(haveaseat.Entities.User)
  name: UserDTO(User)
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO__ctor_haveaseat_Entities_User_
  commentId: M:haveaseat.DTOs.UserDTO.#ctor(haveaseat.Entities.User)
  name.vb: New(User)
  fullName: haveaseat.DTOs.UserDTO.UserDTO(haveaseat.Entities.User)
  fullName.vb: haveaseat.DTOs.UserDTO.New(haveaseat.Entities.User)
  nameWithType: UserDTO.UserDTO(User)
  nameWithType.vb: UserDTO.New(User)
- uid: haveaseat.DTOs.UserDTO.#ctor*
  name: UserDTO
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO__ctor_
  commentId: Overload:haveaseat.DTOs.UserDTO.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DTOs.UserDTO.UserDTO
  fullName.vb: haveaseat.DTOs.UserDTO.New
  nameWithType: UserDTO.UserDTO
  nameWithType.vb: UserDTO.New
- uid: haveaseat.DTOs.UserDTO.Email
  name: Email
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Email
  commentId: P:haveaseat.DTOs.UserDTO.Email
  fullName: haveaseat.DTOs.UserDTO.Email
  nameWithType: UserDTO.Email
- uid: haveaseat.DTOs.UserDTO.Email*
  name: Email
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Email_
  commentId: Overload:haveaseat.DTOs.UserDTO.Email
  isSpec: "True"
  fullName: haveaseat.DTOs.UserDTO.Email
  nameWithType: UserDTO.Email
- uid: haveaseat.DTOs.UserDTO.Id
  name: Id
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Id
  commentId: P:haveaseat.DTOs.UserDTO.Id
  fullName: haveaseat.DTOs.UserDTO.Id
  nameWithType: UserDTO.Id
- uid: haveaseat.DTOs.UserDTO.Id*
  name: Id
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Id_
  commentId: Overload:haveaseat.DTOs.UserDTO.Id
  isSpec: "True"
  fullName: haveaseat.DTOs.UserDTO.Id
  nameWithType: UserDTO.Id
- uid: haveaseat.DTOs.UserDTO.Name
  name: Name
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Name
  commentId: P:haveaseat.DTOs.UserDTO.Name
  fullName: haveaseat.DTOs.UserDTO.Name
  nameWithType: UserDTO.Name
- uid: haveaseat.DTOs.UserDTO.Name*
  name: Name
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Name_
  commentId: Overload:haveaseat.DTOs.UserDTO.Name
  isSpec: "True"
  fullName: haveaseat.DTOs.UserDTO.Name
  nameWithType: UserDTO.Name
- uid: haveaseat.DTOs.UserDTO.Role
  name: Role
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Role
  commentId: P:haveaseat.DTOs.UserDTO.Role
  fullName: haveaseat.DTOs.UserDTO.Role
  nameWithType: UserDTO.Role
- uid: haveaseat.DTOs.UserDTO.Role*
  name: Role
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Role_
  commentId: Overload:haveaseat.DTOs.UserDTO.Role
  isSpec: "True"
  fullName: haveaseat.DTOs.UserDTO.Role
  nameWithType: UserDTO.Role
- uid: haveaseat.DTOs.UserDTO.Surname
  name: Surname
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Surname
  commentId: P:haveaseat.DTOs.UserDTO.Surname
  fullName: haveaseat.DTOs.UserDTO.Surname
  nameWithType: UserDTO.Surname
- uid: haveaseat.DTOs.UserDTO.Surname*
  name: Surname
  href: api/haveaseat.DTOs.UserDTO.html#haveaseat_DTOs_UserDTO_Surname_
  commentId: Overload:haveaseat.DTOs.UserDTO.Surname
  isSpec: "True"
  fullName: haveaseat.DTOs.UserDTO.Surname
  nameWithType: UserDTO.Surname
- uid: haveaseat.DbContexts
  name: haveaseat.DbContexts
  href: api/haveaseat.DbContexts.html
  commentId: N:haveaseat.DbContexts
  fullName: haveaseat.DbContexts
  nameWithType: haveaseat.DbContexts
- uid: haveaseat.DbContexts.DataContext
  name: DataContext
  href: api/haveaseat.DbContexts.DataContext.html
  commentId: T:haveaseat.DbContexts.DataContext
  fullName: haveaseat.DbContexts.DataContext
  nameWithType: DataContext
- uid: haveaseat.DbContexts.DataContext.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: DataContext(IConfiguration)
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:haveaseat.DbContexts.DataContext.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
  fullName: haveaseat.DbContexts.DataContext.DataContext(Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: haveaseat.DbContexts.DataContext.New(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: DataContext.DataContext(IConfiguration)
  nameWithType.vb: DataContext.New(IConfiguration)
- uid: haveaseat.DbContexts.DataContext.#ctor*
  name: DataContext
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext__ctor_
  commentId: Overload:haveaseat.DbContexts.DataContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.DbContexts.DataContext.DataContext
  fullName.vb: haveaseat.DbContexts.DataContext.New
  nameWithType: DataContext.DataContext
  nameWithType.vb: DataContext.New
- uid: haveaseat.DbContexts.DataContext.Area
  name: Area
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Area
  commentId: P:haveaseat.DbContexts.DataContext.Area
  fullName: haveaseat.DbContexts.DataContext.Area
  nameWithType: DataContext.Area
- uid: haveaseat.DbContexts.DataContext.Area*
  name: Area
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Area_
  commentId: Overload:haveaseat.DbContexts.DataContext.Area
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.Area
  nameWithType: DataContext.Area
- uid: haveaseat.DbContexts.DataContext.Cells
  name: Cells
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Cells
  commentId: P:haveaseat.DbContexts.DataContext.Cells
  fullName: haveaseat.DbContexts.DataContext.Cells
  nameWithType: DataContext.Cells
- uid: haveaseat.DbContexts.DataContext.Cells*
  name: Cells
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Cells_
  commentId: Overload:haveaseat.DbContexts.DataContext.Cells
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.Cells
  nameWithType: DataContext.Cells
- uid: haveaseat.DbContexts.DataContext.Desks
  name: Desks
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Desks
  commentId: P:haveaseat.DbContexts.DataContext.Desks
  fullName: haveaseat.DbContexts.DataContext.Desks
  nameWithType: DataContext.Desks
- uid: haveaseat.DbContexts.DataContext.Desks*
  name: Desks
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Desks_
  commentId: Overload:haveaseat.DbContexts.DataContext.Desks
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.Desks
  nameWithType: DataContext.Desks
- uid: haveaseat.DbContexts.DataContext.ForbiddenDates
  name: ForbiddenDates
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_ForbiddenDates
  commentId: P:haveaseat.DbContexts.DataContext.ForbiddenDates
  fullName: haveaseat.DbContexts.DataContext.ForbiddenDates
  nameWithType: DataContext.ForbiddenDates
- uid: haveaseat.DbContexts.DataContext.ForbiddenDates*
  name: ForbiddenDates
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_ForbiddenDates_
  commentId: Overload:haveaseat.DbContexts.DataContext.ForbiddenDates
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.ForbiddenDates
  nameWithType: DataContext.ForbiddenDates
- uid: haveaseat.DbContexts.DataContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  name: OnConfiguring(DbContextOptionsBuilder)
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_OnConfiguring_Microsoft_EntityFrameworkCore_DbContextOptionsBuilder_
  commentId: M:haveaseat.DbContexts.DataContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  fullName: haveaseat.DbContexts.DataContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  nameWithType: DataContext.OnConfiguring(DbContextOptionsBuilder)
- uid: haveaseat.DbContexts.DataContext.OnConfiguring*
  name: OnConfiguring
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_OnConfiguring_
  commentId: Overload:haveaseat.DbContexts.DataContext.OnConfiguring
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.OnConfiguring
  nameWithType: DataContext.OnConfiguring
- uid: haveaseat.DbContexts.DataContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:haveaseat.DbContexts.DataContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: haveaseat.DbContexts.DataContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: DataContext.OnModelCreating(ModelBuilder)
- uid: haveaseat.DbContexts.DataContext.OnModelCreating*
  name: OnModelCreating
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_OnModelCreating_
  commentId: Overload:haveaseat.DbContexts.DataContext.OnModelCreating
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.OnModelCreating
  nameWithType: DataContext.OnModelCreating
- uid: haveaseat.DbContexts.DataContext.Reservations
  name: Reservations
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Reservations
  commentId: P:haveaseat.DbContexts.DataContext.Reservations
  fullName: haveaseat.DbContexts.DataContext.Reservations
  nameWithType: DataContext.Reservations
- uid: haveaseat.DbContexts.DataContext.Reservations*
  name: Reservations
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Reservations_
  commentId: Overload:haveaseat.DbContexts.DataContext.Reservations
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.Reservations
  nameWithType: DataContext.Reservations
- uid: haveaseat.DbContexts.DataContext.Rooms
  name: Rooms
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Rooms
  commentId: P:haveaseat.DbContexts.DataContext.Rooms
  fullName: haveaseat.DbContexts.DataContext.Rooms
  nameWithType: DataContext.Rooms
- uid: haveaseat.DbContexts.DataContext.Rooms*
  name: Rooms
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Rooms_
  commentId: Overload:haveaseat.DbContexts.DataContext.Rooms
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.Rooms
  nameWithType: DataContext.Rooms
- uid: haveaseat.DbContexts.DataContext.Users
  name: Users
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Users
  commentId: P:haveaseat.DbContexts.DataContext.Users
  fullName: haveaseat.DbContexts.DataContext.Users
  nameWithType: DataContext.Users
- uid: haveaseat.DbContexts.DataContext.Users*
  name: Users
  href: api/haveaseat.DbContexts.DataContext.html#haveaseat_DbContexts_DataContext_Users_
  commentId: Overload:haveaseat.DbContexts.DataContext.Users
  isSpec: "True"
  fullName: haveaseat.DbContexts.DataContext.Users
  nameWithType: DataContext.Users
- uid: haveaseat.Entities
  name: haveaseat.Entities
  href: api/haveaseat.Entities.html
  commentId: N:haveaseat.Entities
  fullName: haveaseat.Entities
  nameWithType: haveaseat.Entities
- uid: haveaseat.Entities.Area
  name: Area
  href: api/haveaseat.Entities.Area.html
  commentId: T:haveaseat.Entities.Area
  fullName: haveaseat.Entities.Area
  nameWithType: Area
- uid: haveaseat.Entities.Area.Height
  name: Height
  href: api/haveaseat.Entities.Area.html#haveaseat_Entities_Area_Height
  commentId: P:haveaseat.Entities.Area.Height
  fullName: haveaseat.Entities.Area.Height
  nameWithType: Area.Height
- uid: haveaseat.Entities.Area.Height*
  name: Height
  href: api/haveaseat.Entities.Area.html#haveaseat_Entities_Area_Height_
  commentId: Overload:haveaseat.Entities.Area.Height
  isSpec: "True"
  fullName: haveaseat.Entities.Area.Height
  nameWithType: Area.Height
- uid: haveaseat.Entities.Area.Id
  name: Id
  href: api/haveaseat.Entities.Area.html#haveaseat_Entities_Area_Id
  commentId: P:haveaseat.Entities.Area.Id
  fullName: haveaseat.Entities.Area.Id
  nameWithType: Area.Id
- uid: haveaseat.Entities.Area.Id*
  name: Id
  href: api/haveaseat.Entities.Area.html#haveaseat_Entities_Area_Id_
  commentId: Overload:haveaseat.Entities.Area.Id
  isSpec: "True"
  fullName: haveaseat.Entities.Area.Id
  nameWithType: Area.Id
- uid: haveaseat.Entities.Area.Width
  name: Width
  href: api/haveaseat.Entities.Area.html#haveaseat_Entities_Area_Width
  commentId: P:haveaseat.Entities.Area.Width
  fullName: haveaseat.Entities.Area.Width
  nameWithType: Area.Width
- uid: haveaseat.Entities.Area.Width*
  name: Width
  href: api/haveaseat.Entities.Area.html#haveaseat_Entities_Area_Width_
  commentId: Overload:haveaseat.Entities.Area.Width
  isSpec: "True"
  fullName: haveaseat.Entities.Area.Width
  nameWithType: Area.Width
- uid: haveaseat.Entities.Cell
  name: Cell
  href: api/haveaseat.Entities.Cell.html
  commentId: T:haveaseat.Entities.Cell
  fullName: haveaseat.Entities.Cell
  nameWithType: Cell
- uid: haveaseat.Entities.Cell.Border
  name: Border
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_Border
  commentId: P:haveaseat.Entities.Cell.Border
  fullName: haveaseat.Entities.Cell.Border
  nameWithType: Cell.Border
- uid: haveaseat.Entities.Cell.Border*
  name: Border
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_Border_
  commentId: Overload:haveaseat.Entities.Cell.Border
  isSpec: "True"
  fullName: haveaseat.Entities.Cell.Border
  nameWithType: Cell.Border
- uid: haveaseat.Entities.Cell.Id
  name: Id
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_Id
  commentId: P:haveaseat.Entities.Cell.Id
  fullName: haveaseat.Entities.Cell.Id
  nameWithType: Cell.Id
- uid: haveaseat.Entities.Cell.Id*
  name: Id
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_Id_
  commentId: Overload:haveaseat.Entities.Cell.Id
  isSpec: "True"
  fullName: haveaseat.Entities.Cell.Id
  nameWithType: Cell.Id
- uid: haveaseat.Entities.Cell.PositionX
  name: PositionX
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_PositionX
  commentId: P:haveaseat.Entities.Cell.PositionX
  fullName: haveaseat.Entities.Cell.PositionX
  nameWithType: Cell.PositionX
- uid: haveaseat.Entities.Cell.PositionX*
  name: PositionX
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_PositionX_
  commentId: Overload:haveaseat.Entities.Cell.PositionX
  isSpec: "True"
  fullName: haveaseat.Entities.Cell.PositionX
  nameWithType: Cell.PositionX
- uid: haveaseat.Entities.Cell.PositionY
  name: PositionY
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_PositionY
  commentId: P:haveaseat.Entities.Cell.PositionY
  fullName: haveaseat.Entities.Cell.PositionY
  nameWithType: Cell.PositionY
- uid: haveaseat.Entities.Cell.PositionY*
  name: PositionY
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_PositionY_
  commentId: Overload:haveaseat.Entities.Cell.PositionY
  isSpec: "True"
  fullName: haveaseat.Entities.Cell.PositionY
  nameWithType: Cell.PositionY
- uid: haveaseat.Entities.Cell.Room
  name: Room
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_Room
  commentId: P:haveaseat.Entities.Cell.Room
  fullName: haveaseat.Entities.Cell.Room
  nameWithType: Cell.Room
- uid: haveaseat.Entities.Cell.Room*
  name: Room
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_Room_
  commentId: Overload:haveaseat.Entities.Cell.Room
  isSpec: "True"
  fullName: haveaseat.Entities.Cell.Room
  nameWithType: Cell.Room
- uid: haveaseat.Entities.Cell.RoomId
  name: RoomId
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_RoomId
  commentId: P:haveaseat.Entities.Cell.RoomId
  fullName: haveaseat.Entities.Cell.RoomId
  nameWithType: Cell.RoomId
- uid: haveaseat.Entities.Cell.RoomId*
  name: RoomId
  href: api/haveaseat.Entities.Cell.html#haveaseat_Entities_Cell_RoomId_
  commentId: Overload:haveaseat.Entities.Cell.RoomId
  isSpec: "True"
  fullName: haveaseat.Entities.Cell.RoomId
  nameWithType: Cell.RoomId
- uid: haveaseat.Entities.Desk
  name: Desk
  href: api/haveaseat.Entities.Desk.html
  commentId: T:haveaseat.Entities.Desk
  fullName: haveaseat.Entities.Desk
  nameWithType: Desk
- uid: haveaseat.Entities.Desk.ChairPosition
  name: ChairPosition
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_ChairPosition
  commentId: P:haveaseat.Entities.Desk.ChairPosition
  fullName: haveaseat.Entities.Desk.ChairPosition
  nameWithType: Desk.ChairPosition
- uid: haveaseat.Entities.Desk.ChairPosition*
  name: ChairPosition
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_ChairPosition_
  commentId: Overload:haveaseat.Entities.Desk.ChairPosition
  isSpec: "True"
  fullName: haveaseat.Entities.Desk.ChairPosition
  nameWithType: Desk.ChairPosition
- uid: haveaseat.Entities.Desk.Id
  name: Id
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_Id
  commentId: P:haveaseat.Entities.Desk.Id
  fullName: haveaseat.Entities.Desk.Id
  nameWithType: Desk.Id
- uid: haveaseat.Entities.Desk.Id*
  name: Id
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_Id_
  commentId: Overload:haveaseat.Entities.Desk.Id
  isSpec: "True"
  fullName: haveaseat.Entities.Desk.Id
  nameWithType: Desk.Id
- uid: haveaseat.Entities.Desk.PositionX
  name: PositionX
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_PositionX
  commentId: P:haveaseat.Entities.Desk.PositionX
  fullName: haveaseat.Entities.Desk.PositionX
  nameWithType: Desk.PositionX
- uid: haveaseat.Entities.Desk.PositionX*
  name: PositionX
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_PositionX_
  commentId: Overload:haveaseat.Entities.Desk.PositionX
  isSpec: "True"
  fullName: haveaseat.Entities.Desk.PositionX
  nameWithType: Desk.PositionX
- uid: haveaseat.Entities.Desk.PositionY
  name: PositionY
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_PositionY
  commentId: P:haveaseat.Entities.Desk.PositionY
  fullName: haveaseat.Entities.Desk.PositionY
  nameWithType: Desk.PositionY
- uid: haveaseat.Entities.Desk.PositionY*
  name: PositionY
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_PositionY_
  commentId: Overload:haveaseat.Entities.Desk.PositionY
  isSpec: "True"
  fullName: haveaseat.Entities.Desk.PositionY
  nameWithType: Desk.PositionY
- uid: haveaseat.Entities.Desk.Reservations
  name: Reservations
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_Reservations
  commentId: P:haveaseat.Entities.Desk.Reservations
  fullName: haveaseat.Entities.Desk.Reservations
  nameWithType: Desk.Reservations
- uid: haveaseat.Entities.Desk.Reservations*
  name: Reservations
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_Reservations_
  commentId: Overload:haveaseat.Entities.Desk.Reservations
  isSpec: "True"
  fullName: haveaseat.Entities.Desk.Reservations
  nameWithType: Desk.Reservations
- uid: haveaseat.Entities.Desk.Room
  name: Room
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_Room
  commentId: P:haveaseat.Entities.Desk.Room
  fullName: haveaseat.Entities.Desk.Room
  nameWithType: Desk.Room
- uid: haveaseat.Entities.Desk.Room*
  name: Room
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_Room_
  commentId: Overload:haveaseat.Entities.Desk.Room
  isSpec: "True"
  fullName: haveaseat.Entities.Desk.Room
  nameWithType: Desk.Room
- uid: haveaseat.Entities.Desk.RoomId
  name: RoomId
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_RoomId
  commentId: P:haveaseat.Entities.Desk.RoomId
  fullName: haveaseat.Entities.Desk.RoomId
  nameWithType: Desk.RoomId
- uid: haveaseat.Entities.Desk.RoomId*
  name: RoomId
  href: api/haveaseat.Entities.Desk.html#haveaseat_Entities_Desk_RoomId_
  commentId: Overload:haveaseat.Entities.Desk.RoomId
  isSpec: "True"
  fullName: haveaseat.Entities.Desk.RoomId
  nameWithType: Desk.RoomId
- uid: haveaseat.Entities.ForbiddenDate
  name: ForbiddenDate
  href: api/haveaseat.Entities.ForbiddenDate.html
  commentId: T:haveaseat.Entities.ForbiddenDate
  fullName: haveaseat.Entities.ForbiddenDate
  nameWithType: ForbiddenDate
- uid: haveaseat.Entities.ForbiddenDate.Date
  name: Date
  href: api/haveaseat.Entities.ForbiddenDate.html#haveaseat_Entities_ForbiddenDate_Date
  commentId: P:haveaseat.Entities.ForbiddenDate.Date
  fullName: haveaseat.Entities.ForbiddenDate.Date
  nameWithType: ForbiddenDate.Date
- uid: haveaseat.Entities.ForbiddenDate.Date*
  name: Date
  href: api/haveaseat.Entities.ForbiddenDate.html#haveaseat_Entities_ForbiddenDate_Date_
  commentId: Overload:haveaseat.Entities.ForbiddenDate.Date
  isSpec: "True"
  fullName: haveaseat.Entities.ForbiddenDate.Date
  nameWithType: ForbiddenDate.Date
- uid: haveaseat.Entities.ForbiddenDate.Description
  name: Description
  href: api/haveaseat.Entities.ForbiddenDate.html#haveaseat_Entities_ForbiddenDate_Description
  commentId: P:haveaseat.Entities.ForbiddenDate.Description
  fullName: haveaseat.Entities.ForbiddenDate.Description
  nameWithType: ForbiddenDate.Description
- uid: haveaseat.Entities.ForbiddenDate.Description*
  name: Description
  href: api/haveaseat.Entities.ForbiddenDate.html#haveaseat_Entities_ForbiddenDate_Description_
  commentId: Overload:haveaseat.Entities.ForbiddenDate.Description
  isSpec: "True"
  fullName: haveaseat.Entities.ForbiddenDate.Description
  nameWithType: ForbiddenDate.Description
- uid: haveaseat.Entities.ForbiddenDate.Id
  name: Id
  href: api/haveaseat.Entities.ForbiddenDate.html#haveaseat_Entities_ForbiddenDate_Id
  commentId: P:haveaseat.Entities.ForbiddenDate.Id
  fullName: haveaseat.Entities.ForbiddenDate.Id
  nameWithType: ForbiddenDate.Id
- uid: haveaseat.Entities.ForbiddenDate.Id*
  name: Id
  href: api/haveaseat.Entities.ForbiddenDate.html#haveaseat_Entities_ForbiddenDate_Id_
  commentId: Overload:haveaseat.Entities.ForbiddenDate.Id
  isSpec: "True"
  fullName: haveaseat.Entities.ForbiddenDate.Id
  nameWithType: ForbiddenDate.Id
- uid: haveaseat.Entities.Reservation
  name: Reservation
  href: api/haveaseat.Entities.Reservation.html
  commentId: T:haveaseat.Entities.Reservation
  fullName: haveaseat.Entities.Reservation
  nameWithType: Reservation
- uid: haveaseat.Entities.Reservation.Date
  name: Date
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_Date
  commentId: P:haveaseat.Entities.Reservation.Date
  fullName: haveaseat.Entities.Reservation.Date
  nameWithType: Reservation.Date
- uid: haveaseat.Entities.Reservation.Date*
  name: Date
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_Date_
  commentId: Overload:haveaseat.Entities.Reservation.Date
  isSpec: "True"
  fullName: haveaseat.Entities.Reservation.Date
  nameWithType: Reservation.Date
- uid: haveaseat.Entities.Reservation.Desk
  name: Desk
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_Desk
  commentId: P:haveaseat.Entities.Reservation.Desk
  fullName: haveaseat.Entities.Reservation.Desk
  nameWithType: Reservation.Desk
- uid: haveaseat.Entities.Reservation.Desk*
  name: Desk
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_Desk_
  commentId: Overload:haveaseat.Entities.Reservation.Desk
  isSpec: "True"
  fullName: haveaseat.Entities.Reservation.Desk
  nameWithType: Reservation.Desk
- uid: haveaseat.Entities.Reservation.DeskId
  name: DeskId
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_DeskId
  commentId: P:haveaseat.Entities.Reservation.DeskId
  fullName: haveaseat.Entities.Reservation.DeskId
  nameWithType: Reservation.DeskId
- uid: haveaseat.Entities.Reservation.DeskId*
  name: DeskId
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_DeskId_
  commentId: Overload:haveaseat.Entities.Reservation.DeskId
  isSpec: "True"
  fullName: haveaseat.Entities.Reservation.DeskId
  nameWithType: Reservation.DeskId
- uid: haveaseat.Entities.Reservation.Id
  name: Id
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_Id
  commentId: P:haveaseat.Entities.Reservation.Id
  fullName: haveaseat.Entities.Reservation.Id
  nameWithType: Reservation.Id
- uid: haveaseat.Entities.Reservation.Id*
  name: Id
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_Id_
  commentId: Overload:haveaseat.Entities.Reservation.Id
  isSpec: "True"
  fullName: haveaseat.Entities.Reservation.Id
  nameWithType: Reservation.Id
- uid: haveaseat.Entities.Reservation.User
  name: User
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_User
  commentId: P:haveaseat.Entities.Reservation.User
  fullName: haveaseat.Entities.Reservation.User
  nameWithType: Reservation.User
- uid: haveaseat.Entities.Reservation.User*
  name: User
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_User_
  commentId: Overload:haveaseat.Entities.Reservation.User
  isSpec: "True"
  fullName: haveaseat.Entities.Reservation.User
  nameWithType: Reservation.User
- uid: haveaseat.Entities.Reservation.UserId
  name: UserId
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_UserId
  commentId: P:haveaseat.Entities.Reservation.UserId
  fullName: haveaseat.Entities.Reservation.UserId
  nameWithType: Reservation.UserId
- uid: haveaseat.Entities.Reservation.UserId*
  name: UserId
  href: api/haveaseat.Entities.Reservation.html#haveaseat_Entities_Reservation_UserId_
  commentId: Overload:haveaseat.Entities.Reservation.UserId
  isSpec: "True"
  fullName: haveaseat.Entities.Reservation.UserId
  nameWithType: Reservation.UserId
- uid: haveaseat.Entities.Room
  name: Room
  href: api/haveaseat.Entities.Room.html
  commentId: T:haveaseat.Entities.Room
  fullName: haveaseat.Entities.Room
  nameWithType: Room
- uid: haveaseat.Entities.Room.Cells
  name: Cells
  href: api/haveaseat.Entities.Room.html#haveaseat_Entities_Room_Cells
  commentId: P:haveaseat.Entities.Room.Cells
  fullName: haveaseat.Entities.Room.Cells
  nameWithType: Room.Cells
- uid: haveaseat.Entities.Room.Cells*
  name: Cells
  href: api/haveaseat.Entities.Room.html#haveaseat_Entities_Room_Cells_
  commentId: Overload:haveaseat.Entities.Room.Cells
  isSpec: "True"
  fullName: haveaseat.Entities.Room.Cells
  nameWithType: Room.Cells
- uid: haveaseat.Entities.Room.Desks
  name: Desks
  href: api/haveaseat.Entities.Room.html#haveaseat_Entities_Room_Desks
  commentId: P:haveaseat.Entities.Room.Desks
  fullName: haveaseat.Entities.Room.Desks
  nameWithType: Room.Desks
- uid: haveaseat.Entities.Room.Desks*
  name: Desks
  href: api/haveaseat.Entities.Room.html#haveaseat_Entities_Room_Desks_
  commentId: Overload:haveaseat.Entities.Room.Desks
  isSpec: "True"
  fullName: haveaseat.Entities.Room.Desks
  nameWithType: Room.Desks
- uid: haveaseat.Entities.Room.Id
  name: Id
  href: api/haveaseat.Entities.Room.html#haveaseat_Entities_Room_Id
  commentId: P:haveaseat.Entities.Room.Id
  fullName: haveaseat.Entities.Room.Id
  nameWithType: Room.Id
- uid: haveaseat.Entities.Room.Id*
  name: Id
  href: api/haveaseat.Entities.Room.html#haveaseat_Entities_Room_Id_
  commentId: Overload:haveaseat.Entities.Room.Id
  isSpec: "True"
  fullName: haveaseat.Entities.Room.Id
  nameWithType: Room.Id
- uid: haveaseat.Entities.Room.Name
  name: Name
  href: api/haveaseat.Entities.Room.html#haveaseat_Entities_Room_Name
  commentId: P:haveaseat.Entities.Room.Name
  fullName: haveaseat.Entities.Room.Name
  nameWithType: Room.Name
- uid: haveaseat.Entities.Room.Name*
  name: Name
  href: api/haveaseat.Entities.Room.html#haveaseat_Entities_Room_Name_
  commentId: Overload:haveaseat.Entities.Room.Name
  isSpec: "True"
  fullName: haveaseat.Entities.Room.Name
  nameWithType: Room.Name
- uid: haveaseat.Entities.User
  name: User
  href: api/haveaseat.Entities.User.html
  commentId: T:haveaseat.Entities.User
  fullName: haveaseat.Entities.User
  nameWithType: User
- uid: haveaseat.Entities.User.Email
  name: Email
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Email
  commentId: P:haveaseat.Entities.User.Email
  fullName: haveaseat.Entities.User.Email
  nameWithType: User.Email
- uid: haveaseat.Entities.User.Email*
  name: Email
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Email_
  commentId: Overload:haveaseat.Entities.User.Email
  isSpec: "True"
  fullName: haveaseat.Entities.User.Email
  nameWithType: User.Email
- uid: haveaseat.Entities.User.Id
  name: Id
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Id
  commentId: P:haveaseat.Entities.User.Id
  fullName: haveaseat.Entities.User.Id
  nameWithType: User.Id
- uid: haveaseat.Entities.User.Id*
  name: Id
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Id_
  commentId: Overload:haveaseat.Entities.User.Id
  isSpec: "True"
  fullName: haveaseat.Entities.User.Id
  nameWithType: User.Id
- uid: haveaseat.Entities.User.Name
  name: Name
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Name
  commentId: P:haveaseat.Entities.User.Name
  fullName: haveaseat.Entities.User.Name
  nameWithType: User.Name
- uid: haveaseat.Entities.User.Name*
  name: Name
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Name_
  commentId: Overload:haveaseat.Entities.User.Name
  isSpec: "True"
  fullName: haveaseat.Entities.User.Name
  nameWithType: User.Name
- uid: haveaseat.Entities.User.Password
  name: Password
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Password
  commentId: P:haveaseat.Entities.User.Password
  fullName: haveaseat.Entities.User.Password
  nameWithType: User.Password
- uid: haveaseat.Entities.User.Password*
  name: Password
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Password_
  commentId: Overload:haveaseat.Entities.User.Password
  isSpec: "True"
  fullName: haveaseat.Entities.User.Password
  nameWithType: User.Password
- uid: haveaseat.Entities.User.Reservations
  name: Reservations
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Reservations
  commentId: P:haveaseat.Entities.User.Reservations
  fullName: haveaseat.Entities.User.Reservations
  nameWithType: User.Reservations
- uid: haveaseat.Entities.User.Reservations*
  name: Reservations
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Reservations_
  commentId: Overload:haveaseat.Entities.User.Reservations
  isSpec: "True"
  fullName: haveaseat.Entities.User.Reservations
  nameWithType: User.Reservations
- uid: haveaseat.Entities.User.Role
  name: Role
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Role
  commentId: P:haveaseat.Entities.User.Role
  fullName: haveaseat.Entities.User.Role
  nameWithType: User.Role
- uid: haveaseat.Entities.User.Role*
  name: Role
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Role_
  commentId: Overload:haveaseat.Entities.User.Role
  isSpec: "True"
  fullName: haveaseat.Entities.User.Role
  nameWithType: User.Role
- uid: haveaseat.Entities.User.Surname
  name: Surname
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Surname
  commentId: P:haveaseat.Entities.User.Surname
  fullName: haveaseat.Entities.User.Surname
  nameWithType: User.Surname
- uid: haveaseat.Entities.User.Surname*
  name: Surname
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_Surname_
  commentId: Overload:haveaseat.Entities.User.Surname
  isSpec: "True"
  fullName: haveaseat.Entities.User.Surname
  nameWithType: User.Surname
- uid: haveaseat.Entities.User.salt
  name: salt
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_salt
  commentId: P:haveaseat.Entities.User.salt
  fullName: haveaseat.Entities.User.salt
  nameWithType: User.salt
- uid: haveaseat.Entities.User.salt*
  name: salt
  href: api/haveaseat.Entities.User.html#haveaseat_Entities_User_salt_
  commentId: Overload:haveaseat.Entities.User.salt
  isSpec: "True"
  fullName: haveaseat.Entities.User.salt
  nameWithType: User.salt
- uid: haveaseat.Models
  name: haveaseat.Models
  href: api/haveaseat.Models.html
  commentId: N:haveaseat.Models
  fullName: haveaseat.Models
  nameWithType: haveaseat.Models
- uid: haveaseat.Models.ChairPosition
  name: ChairPosition
  href: api/haveaseat.Models.ChairPosition.html
  commentId: T:haveaseat.Models.ChairPosition
  fullName: haveaseat.Models.ChairPosition
  nameWithType: ChairPosition
- uid: haveaseat.Models.ChairPosition.BOTTOM
  name: BOTTOM
  href: api/haveaseat.Models.ChairPosition.html#haveaseat_Models_ChairPosition_BOTTOM
  commentId: F:haveaseat.Models.ChairPosition.BOTTOM
  fullName: haveaseat.Models.ChairPosition.BOTTOM
  nameWithType: ChairPosition.BOTTOM
- uid: haveaseat.Models.ChairPosition.LEFT
  name: LEFT
  href: api/haveaseat.Models.ChairPosition.html#haveaseat_Models_ChairPosition_LEFT
  commentId: F:haveaseat.Models.ChairPosition.LEFT
  fullName: haveaseat.Models.ChairPosition.LEFT
  nameWithType: ChairPosition.LEFT
- uid: haveaseat.Models.ChairPosition.RIGHT
  name: RIGHT
  href: api/haveaseat.Models.ChairPosition.html#haveaseat_Models_ChairPosition_RIGHT
  commentId: F:haveaseat.Models.ChairPosition.RIGHT
  fullName: haveaseat.Models.ChairPosition.RIGHT
  nameWithType: ChairPosition.RIGHT
- uid: haveaseat.Models.ChairPosition.TOP
  name: TOP
  href: api/haveaseat.Models.ChairPosition.html#haveaseat_Models_ChairPosition_TOP
  commentId: F:haveaseat.Models.ChairPosition.TOP
  fullName: haveaseat.Models.ChairPosition.TOP
  nameWithType: ChairPosition.TOP
- uid: haveaseat.Models.Role
  name: Role
  href: api/haveaseat.Models.Role.html
  commentId: T:haveaseat.Models.Role
  fullName: haveaseat.Models.Role
  nameWithType: Role
- uid: haveaseat.Models.Role.ADMIN
  name: ADMIN
  href: api/haveaseat.Models.Role.html#haveaseat_Models_Role_ADMIN
  commentId: F:haveaseat.Models.Role.ADMIN
  fullName: haveaseat.Models.Role.ADMIN
  nameWithType: Role.ADMIN
- uid: haveaseat.Models.Role.EMPLOYEE
  name: EMPLOYEE
  href: api/haveaseat.Models.Role.html#haveaseat_Models_Role_EMPLOYEE
  commentId: F:haveaseat.Models.Role.EMPLOYEE
  fullName: haveaseat.Models.Role.EMPLOYEE
  nameWithType: Role.EMPLOYEE
- uid: haveaseat.Repositories
  name: haveaseat.Repositories
  href: api/haveaseat.Repositories.html
  commentId: N:haveaseat.Repositories
  fullName: haveaseat.Repositories
  nameWithType: haveaseat.Repositories
- uid: haveaseat.Repositories.AuthenticationRepository
  name: AuthenticationRepository
  href: api/haveaseat.Repositories.AuthenticationRepository.html
  commentId: T:haveaseat.Repositories.AuthenticationRepository
  fullName: haveaseat.Repositories.AuthenticationRepository
  nameWithType: AuthenticationRepository
- uid: haveaseat.Repositories.AuthenticationRepository.#ctor(haveaseat.DbContexts.DataContext)
  name: AuthenticationRepository(DataContext)
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository__ctor_haveaseat_DbContexts_DataContext_
  commentId: M:haveaseat.Repositories.AuthenticationRepository.#ctor(haveaseat.DbContexts.DataContext)
  name.vb: New(DataContext)
  fullName: haveaseat.Repositories.AuthenticationRepository.AuthenticationRepository(haveaseat.DbContexts.DataContext)
  fullName.vb: haveaseat.Repositories.AuthenticationRepository.New(haveaseat.DbContexts.DataContext)
  nameWithType: AuthenticationRepository.AuthenticationRepository(DataContext)
  nameWithType.vb: AuthenticationRepository.New(DataContext)
- uid: haveaseat.Repositories.AuthenticationRepository.#ctor*
  name: AuthenticationRepository
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository__ctor_
  commentId: Overload:haveaseat.Repositories.AuthenticationRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.Repositories.AuthenticationRepository.AuthenticationRepository
  fullName.vb: haveaseat.Repositories.AuthenticationRepository.New
  nameWithType: AuthenticationRepository.AuthenticationRepository
  nameWithType.vb: AuthenticationRepository.New
- uid: haveaseat.Repositories.AuthenticationRepository.GetSaltByEmail(System.String)
  name: GetSaltByEmail(string)
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_GetSaltByEmail_System_String_
  commentId: M:haveaseat.Repositories.AuthenticationRepository.GetSaltByEmail(System.String)
  name.vb: GetSaltByEmail(String)
  fullName: haveaseat.Repositories.AuthenticationRepository.GetSaltByEmail(string)
  fullName.vb: haveaseat.Repositories.AuthenticationRepository.GetSaltByEmail(String)
  nameWithType: AuthenticationRepository.GetSaltByEmail(string)
  nameWithType.vb: AuthenticationRepository.GetSaltByEmail(String)
- uid: haveaseat.Repositories.AuthenticationRepository.GetSaltByEmail*
  name: GetSaltByEmail
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_GetSaltByEmail_
  commentId: Overload:haveaseat.Repositories.AuthenticationRepository.GetSaltByEmail
  isSpec: "True"
  fullName: haveaseat.Repositories.AuthenticationRepository.GetSaltByEmail
  nameWithType: AuthenticationRepository.GetSaltByEmail
- uid: haveaseat.Repositories.AuthenticationRepository.GetUserByEmail(System.String)
  name: GetUserByEmail(string)
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_GetUserByEmail_System_String_
  commentId: M:haveaseat.Repositories.AuthenticationRepository.GetUserByEmail(System.String)
  name.vb: GetUserByEmail(String)
  fullName: haveaseat.Repositories.AuthenticationRepository.GetUserByEmail(string)
  fullName.vb: haveaseat.Repositories.AuthenticationRepository.GetUserByEmail(String)
  nameWithType: AuthenticationRepository.GetUserByEmail(string)
  nameWithType.vb: AuthenticationRepository.GetUserByEmail(String)
- uid: haveaseat.Repositories.AuthenticationRepository.GetUserByEmail*
  name: GetUserByEmail
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_GetUserByEmail_
  commentId: Overload:haveaseat.Repositories.AuthenticationRepository.GetUserByEmail
  isSpec: "True"
  fullName: haveaseat.Repositories.AuthenticationRepository.GetUserByEmail
  nameWithType: AuthenticationRepository.GetUserByEmail
- uid: haveaseat.Repositories.AuthenticationRepository.GetUserById(System.Int64)
  name: GetUserById(long)
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_GetUserById_System_Int64_
  commentId: M:haveaseat.Repositories.AuthenticationRepository.GetUserById(System.Int64)
  name.vb: GetUserById(Long)
  fullName: haveaseat.Repositories.AuthenticationRepository.GetUserById(long)
  fullName.vb: haveaseat.Repositories.AuthenticationRepository.GetUserById(Long)
  nameWithType: AuthenticationRepository.GetUserById(long)
  nameWithType.vb: AuthenticationRepository.GetUserById(Long)
- uid: haveaseat.Repositories.AuthenticationRepository.GetUserById*
  name: GetUserById
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_GetUserById_
  commentId: Overload:haveaseat.Repositories.AuthenticationRepository.GetUserById
  isSpec: "True"
  fullName: haveaseat.Repositories.AuthenticationRepository.GetUserById
  nameWithType: AuthenticationRepository.GetUserById
- uid: haveaseat.Repositories.AuthenticationRepository.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  name: LoginUser(NewUserLoginDTO)
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_LoginUser_haveaseat_DTOs_NewUserLoginDTO_
  commentId: M:haveaseat.Repositories.AuthenticationRepository.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  fullName: haveaseat.Repositories.AuthenticationRepository.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  nameWithType: AuthenticationRepository.LoginUser(NewUserLoginDTO)
- uid: haveaseat.Repositories.AuthenticationRepository.LoginUser*
  name: LoginUser
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_LoginUser_
  commentId: Overload:haveaseat.Repositories.AuthenticationRepository.LoginUser
  isSpec: "True"
  fullName: haveaseat.Repositories.AuthenticationRepository.LoginUser
  nameWithType: AuthenticationRepository.LoginUser
- uid: haveaseat.Repositories.AuthenticationRepository.RegisterUser(haveaseat.DTOs.NewUserDTO,System.String)
  name: RegisterUser(NewUserDTO, string)
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_RegisterUser_haveaseat_DTOs_NewUserDTO_System_String_
  commentId: M:haveaseat.Repositories.AuthenticationRepository.RegisterUser(haveaseat.DTOs.NewUserDTO,System.String)
  name.vb: RegisterUser(NewUserDTO, String)
  fullName: haveaseat.Repositories.AuthenticationRepository.RegisterUser(haveaseat.DTOs.NewUserDTO, string)
  fullName.vb: haveaseat.Repositories.AuthenticationRepository.RegisterUser(haveaseat.DTOs.NewUserDTO, String)
  nameWithType: AuthenticationRepository.RegisterUser(NewUserDTO, string)
  nameWithType.vb: AuthenticationRepository.RegisterUser(NewUserDTO, String)
- uid: haveaseat.Repositories.AuthenticationRepository.RegisterUser*
  name: RegisterUser
  href: api/haveaseat.Repositories.AuthenticationRepository.html#haveaseat_Repositories_AuthenticationRepository_RegisterUser_
  commentId: Overload:haveaseat.Repositories.AuthenticationRepository.RegisterUser
  isSpec: "True"
  fullName: haveaseat.Repositories.AuthenticationRepository.RegisterUser
  nameWithType: AuthenticationRepository.RegisterUser
- uid: haveaseat.Repositories.ForbiddenDateRepository
  name: ForbiddenDateRepository
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html
  commentId: T:haveaseat.Repositories.ForbiddenDateRepository
  fullName: haveaseat.Repositories.ForbiddenDateRepository
  nameWithType: ForbiddenDateRepository
- uid: haveaseat.Repositories.ForbiddenDateRepository.#ctor(haveaseat.DbContexts.DataContext)
  name: ForbiddenDateRepository(DataContext)
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository__ctor_haveaseat_DbContexts_DataContext_
  commentId: M:haveaseat.Repositories.ForbiddenDateRepository.#ctor(haveaseat.DbContexts.DataContext)
  name.vb: New(DataContext)
  fullName: haveaseat.Repositories.ForbiddenDateRepository.ForbiddenDateRepository(haveaseat.DbContexts.DataContext)
  fullName.vb: haveaseat.Repositories.ForbiddenDateRepository.New(haveaseat.DbContexts.DataContext)
  nameWithType: ForbiddenDateRepository.ForbiddenDateRepository(DataContext)
  nameWithType.vb: ForbiddenDateRepository.New(DataContext)
- uid: haveaseat.Repositories.ForbiddenDateRepository.#ctor*
  name: ForbiddenDateRepository
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository__ctor_
  commentId: Overload:haveaseat.Repositories.ForbiddenDateRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.Repositories.ForbiddenDateRepository.ForbiddenDateRepository
  fullName.vb: haveaseat.Repositories.ForbiddenDateRepository.New
  nameWithType: ForbiddenDateRepository.ForbiddenDateRepository
  nameWithType.vb: ForbiddenDateRepository.New
- uid: haveaseat.Repositories.ForbiddenDateRepository.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  name: AddForbiddenDate(NewForbiddenDateDTO)
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_AddForbiddenDate_haveaseat_DTOs_NewForbiddenDateDTO_
  commentId: M:haveaseat.Repositories.ForbiddenDateRepository.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  fullName: haveaseat.Repositories.ForbiddenDateRepository.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  nameWithType: ForbiddenDateRepository.AddForbiddenDate(NewForbiddenDateDTO)
- uid: haveaseat.Repositories.ForbiddenDateRepository.AddForbiddenDate*
  name: AddForbiddenDate
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_AddForbiddenDate_
  commentId: Overload:haveaseat.Repositories.ForbiddenDateRepository.AddForbiddenDate
  isSpec: "True"
  fullName: haveaseat.Repositories.ForbiddenDateRepository.AddForbiddenDate
  nameWithType: ForbiddenDateRepository.AddForbiddenDate
- uid: haveaseat.Repositories.ForbiddenDateRepository.DeleteForbiddenDateByDate(System.DateOnly)
  name: DeleteForbiddenDateByDate(DateOnly)
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_DeleteForbiddenDateByDate_System_DateOnly_
  commentId: M:haveaseat.Repositories.ForbiddenDateRepository.DeleteForbiddenDateByDate(System.DateOnly)
  fullName: haveaseat.Repositories.ForbiddenDateRepository.DeleteForbiddenDateByDate(System.DateOnly)
  nameWithType: ForbiddenDateRepository.DeleteForbiddenDateByDate(DateOnly)
- uid: haveaseat.Repositories.ForbiddenDateRepository.DeleteForbiddenDateByDate*
  name: DeleteForbiddenDateByDate
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_DeleteForbiddenDateByDate_
  commentId: Overload:haveaseat.Repositories.ForbiddenDateRepository.DeleteForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Repositories.ForbiddenDateRepository.DeleteForbiddenDateByDate
  nameWithType: ForbiddenDateRepository.DeleteForbiddenDateByDate
- uid: haveaseat.Repositories.ForbiddenDateRepository.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  name: EditForbiddenDateByDate(NewForbiddenDateDTO)
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_EditForbiddenDateByDate_haveaseat_DTOs_NewForbiddenDateDTO_
  commentId: M:haveaseat.Repositories.ForbiddenDateRepository.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  fullName: haveaseat.Repositories.ForbiddenDateRepository.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  nameWithType: ForbiddenDateRepository.EditForbiddenDateByDate(NewForbiddenDateDTO)
- uid: haveaseat.Repositories.ForbiddenDateRepository.EditForbiddenDateByDate*
  name: EditForbiddenDateByDate
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_EditForbiddenDateByDate_
  commentId: Overload:haveaseat.Repositories.ForbiddenDateRepository.EditForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Repositories.ForbiddenDateRepository.EditForbiddenDateByDate
  nameWithType: ForbiddenDateRepository.EditForbiddenDateByDate
- uid: haveaseat.Repositories.ForbiddenDateRepository.GetAllForbiddenDates
  name: GetAllForbiddenDates()
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_GetAllForbiddenDates
  commentId: M:haveaseat.Repositories.ForbiddenDateRepository.GetAllForbiddenDates
  fullName: haveaseat.Repositories.ForbiddenDateRepository.GetAllForbiddenDates()
  nameWithType: ForbiddenDateRepository.GetAllForbiddenDates()
- uid: haveaseat.Repositories.ForbiddenDateRepository.GetAllForbiddenDates*
  name: GetAllForbiddenDates
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_GetAllForbiddenDates_
  commentId: Overload:haveaseat.Repositories.ForbiddenDateRepository.GetAllForbiddenDates
  isSpec: "True"
  fullName: haveaseat.Repositories.ForbiddenDateRepository.GetAllForbiddenDates
  nameWithType: ForbiddenDateRepository.GetAllForbiddenDates
- uid: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateByDate(System.DateOnly)
  name: GetForbiddenDateByDate(DateOnly)
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_GetForbiddenDateByDate_System_DateOnly_
  commentId: M:haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateByDate(System.DateOnly)
  fullName: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateByDate(System.DateOnly)
  nameWithType: ForbiddenDateRepository.GetForbiddenDateByDate(DateOnly)
- uid: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateByDate*
  name: GetForbiddenDateByDate
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_GetForbiddenDateByDate_
  commentId: Overload:haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateByDate
  nameWithType: ForbiddenDateRepository.GetForbiddenDateByDate
- uid: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateById(System.Int64)
  name: GetForbiddenDateById(long)
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_GetForbiddenDateById_System_Int64_
  commentId: M:haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateById(System.Int64)
  name.vb: GetForbiddenDateById(Long)
  fullName: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateById(long)
  fullName.vb: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateById(Long)
  nameWithType: ForbiddenDateRepository.GetForbiddenDateById(long)
  nameWithType.vb: ForbiddenDateRepository.GetForbiddenDateById(Long)
- uid: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateById*
  name: GetForbiddenDateById
  href: api/haveaseat.Repositories.ForbiddenDateRepository.html#haveaseat_Repositories_ForbiddenDateRepository_GetForbiddenDateById_
  commentId: Overload:haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateById
  isSpec: "True"
  fullName: haveaseat.Repositories.ForbiddenDateRepository.GetForbiddenDateById
  nameWithType: ForbiddenDateRepository.GetForbiddenDateById
- uid: haveaseat.Repositories.Interfaces
  name: haveaseat.Repositories.Interfaces
  href: api/haveaseat.Repositories.Interfaces.html
  commentId: N:haveaseat.Repositories.Interfaces
  fullName: haveaseat.Repositories.Interfaces
  nameWithType: haveaseat.Repositories.Interfaces
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository
  name: IAuthenticationRepository
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html
  commentId: T:haveaseat.Repositories.Interfaces.IAuthenticationRepository
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository
  nameWithType: IAuthenticationRepository
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetSaltByEmail(System.String)
  name: GetSaltByEmail(string)
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_GetSaltByEmail_System_String_
  commentId: M:haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetSaltByEmail(System.String)
  name.vb: GetSaltByEmail(String)
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetSaltByEmail(string)
  fullName.vb: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetSaltByEmail(String)
  nameWithType: IAuthenticationRepository.GetSaltByEmail(string)
  nameWithType.vb: IAuthenticationRepository.GetSaltByEmail(String)
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetSaltByEmail*
  name: GetSaltByEmail
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_GetSaltByEmail_
  commentId: Overload:haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetSaltByEmail
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetSaltByEmail
  nameWithType: IAuthenticationRepository.GetSaltByEmail
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserByEmail(System.String)
  name: GetUserByEmail(string)
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_GetUserByEmail_System_String_
  commentId: M:haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserByEmail(System.String)
  name.vb: GetUserByEmail(String)
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserByEmail(string)
  fullName.vb: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserByEmail(String)
  nameWithType: IAuthenticationRepository.GetUserByEmail(string)
  nameWithType.vb: IAuthenticationRepository.GetUserByEmail(String)
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserByEmail*
  name: GetUserByEmail
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_GetUserByEmail_
  commentId: Overload:haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserByEmail
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserByEmail
  nameWithType: IAuthenticationRepository.GetUserByEmail
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserById(System.Int64)
  name: GetUserById(long)
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_GetUserById_System_Int64_
  commentId: M:haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserById(System.Int64)
  name.vb: GetUserById(Long)
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserById(long)
  fullName.vb: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserById(Long)
  nameWithType: IAuthenticationRepository.GetUserById(long)
  nameWithType.vb: IAuthenticationRepository.GetUserById(Long)
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserById*
  name: GetUserById
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_GetUserById_
  commentId: Overload:haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserById
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.GetUserById
  nameWithType: IAuthenticationRepository.GetUserById
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  name: LoginUser(NewUserLoginDTO)
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_LoginUser_haveaseat_DTOs_NewUserLoginDTO_
  commentId: M:haveaseat.Repositories.Interfaces.IAuthenticationRepository.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  nameWithType: IAuthenticationRepository.LoginUser(NewUserLoginDTO)
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.LoginUser*
  name: LoginUser
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_LoginUser_
  commentId: Overload:haveaseat.Repositories.Interfaces.IAuthenticationRepository.LoginUser
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.LoginUser
  nameWithType: IAuthenticationRepository.LoginUser
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.RegisterUser(haveaseat.DTOs.NewUserDTO,System.String)
  name: RegisterUser(NewUserDTO, string)
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_RegisterUser_haveaseat_DTOs_NewUserDTO_System_String_
  commentId: M:haveaseat.Repositories.Interfaces.IAuthenticationRepository.RegisterUser(haveaseat.DTOs.NewUserDTO,System.String)
  name.vb: RegisterUser(NewUserDTO, String)
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.RegisterUser(haveaseat.DTOs.NewUserDTO, string)
  fullName.vb: haveaseat.Repositories.Interfaces.IAuthenticationRepository.RegisterUser(haveaseat.DTOs.NewUserDTO, String)
  nameWithType: IAuthenticationRepository.RegisterUser(NewUserDTO, string)
  nameWithType.vb: IAuthenticationRepository.RegisterUser(NewUserDTO, String)
- uid: haveaseat.Repositories.Interfaces.IAuthenticationRepository.RegisterUser*
  name: RegisterUser
  href: api/haveaseat.Repositories.Interfaces.IAuthenticationRepository.html#haveaseat_Repositories_Interfaces_IAuthenticationRepository_RegisterUser_
  commentId: Overload:haveaseat.Repositories.Interfaces.IAuthenticationRepository.RegisterUser
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IAuthenticationRepository.RegisterUser
  nameWithType: IAuthenticationRepository.RegisterUser
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository
  name: IForbiddenDateRepository
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html
  commentId: T:haveaseat.Repositories.Interfaces.IForbiddenDateRepository
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository
  nameWithType: IForbiddenDateRepository
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  name: AddForbiddenDate(NewForbiddenDateDTO)
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_AddForbiddenDate_haveaseat_DTOs_NewForbiddenDateDTO_
  commentId: M:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.AddForbiddenDate(haveaseat.DTOs.NewForbiddenDateDTO)
  nameWithType: IForbiddenDateRepository.AddForbiddenDate(NewForbiddenDateDTO)
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.AddForbiddenDate*
  name: AddForbiddenDate
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_AddForbiddenDate_
  commentId: Overload:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.AddForbiddenDate
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.AddForbiddenDate
  nameWithType: IForbiddenDateRepository.AddForbiddenDate
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.DeleteForbiddenDateByDate(System.DateOnly)
  name: DeleteForbiddenDateByDate(DateOnly)
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_DeleteForbiddenDateByDate_System_DateOnly_
  commentId: M:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.DeleteForbiddenDateByDate(System.DateOnly)
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.DeleteForbiddenDateByDate(System.DateOnly)
  nameWithType: IForbiddenDateRepository.DeleteForbiddenDateByDate(DateOnly)
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.DeleteForbiddenDateByDate*
  name: DeleteForbiddenDateByDate
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_DeleteForbiddenDateByDate_
  commentId: Overload:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.DeleteForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.DeleteForbiddenDateByDate
  nameWithType: IForbiddenDateRepository.DeleteForbiddenDateByDate
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  name: EditForbiddenDateByDate(NewForbiddenDateDTO)
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_EditForbiddenDateByDate_haveaseat_DTOs_NewForbiddenDateDTO_
  commentId: M:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.EditForbiddenDateByDate(haveaseat.DTOs.NewForbiddenDateDTO)
  nameWithType: IForbiddenDateRepository.EditForbiddenDateByDate(NewForbiddenDateDTO)
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.EditForbiddenDateByDate*
  name: EditForbiddenDateByDate
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_EditForbiddenDateByDate_
  commentId: Overload:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.EditForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.EditForbiddenDateByDate
  nameWithType: IForbiddenDateRepository.EditForbiddenDateByDate
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetAllForbiddenDates
  name: GetAllForbiddenDates()
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_GetAllForbiddenDates
  commentId: M:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetAllForbiddenDates
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetAllForbiddenDates()
  nameWithType: IForbiddenDateRepository.GetAllForbiddenDates()
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetAllForbiddenDates*
  name: GetAllForbiddenDates
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_GetAllForbiddenDates_
  commentId: Overload:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetAllForbiddenDates
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetAllForbiddenDates
  nameWithType: IForbiddenDateRepository.GetAllForbiddenDates
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateByDate(System.DateOnly)
  name: GetForbiddenDateByDate(DateOnly)
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_GetForbiddenDateByDate_System_DateOnly_
  commentId: M:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateByDate(System.DateOnly)
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateByDate(System.DateOnly)
  nameWithType: IForbiddenDateRepository.GetForbiddenDateByDate(DateOnly)
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateByDate*
  name: GetForbiddenDateByDate
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_GetForbiddenDateByDate_
  commentId: Overload:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateByDate
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateByDate
  nameWithType: IForbiddenDateRepository.GetForbiddenDateByDate
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateById(System.Int64)
  name: GetForbiddenDateById(long)
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_GetForbiddenDateById_System_Int64_
  commentId: M:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateById(System.Int64)
  name.vb: GetForbiddenDateById(Long)
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateById(long)
  fullName.vb: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateById(Long)
  nameWithType: IForbiddenDateRepository.GetForbiddenDateById(long)
  nameWithType.vb: IForbiddenDateRepository.GetForbiddenDateById(Long)
- uid: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateById*
  name: GetForbiddenDateById
  href: api/haveaseat.Repositories.Interfaces.IForbiddenDateRepository.html#haveaseat_Repositories_Interfaces_IForbiddenDateRepository_GetForbiddenDateById_
  commentId: Overload:haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateById
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IForbiddenDateRepository.GetForbiddenDateById
  nameWithType: IForbiddenDateRepository.GetForbiddenDateById
- uid: haveaseat.Repositories.Interfaces.IMapRepository
  name: IMapRepository
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html
  commentId: T:haveaseat.Repositories.Interfaces.IMapRepository
  fullName: haveaseat.Repositories.Interfaces.IMapRepository
  nameWithType: IMapRepository
- uid: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO,haveaseat.Entities.Cell)
  name: AddNewDesk(NewDeskDTO, Cell)
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_AddNewDesk_haveaseat_DTOs_NewDeskDTO_haveaseat_Entities_Cell_
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO,haveaseat.Entities.Cell)
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO, haveaseat.Entities.Cell)
  nameWithType: IMapRepository.AddNewDesk(NewDeskDTO, Cell)
- uid: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk*
  name: AddNewDesk
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_AddNewDesk_
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk
  nameWithType: IMapRepository.AddNewDesk
- uid: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  name: DeleteDesk(NewDeskDTO)
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_DeleteDesk_haveaseat_DTOs_NewDeskDTO_
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  nameWithType: IMapRepository.DeleteDesk(NewDeskDTO)
- uid: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk*
  name: DeleteDesk
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_DeleteDesk_
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk
  nameWithType: IMapRepository.DeleteDesk
- uid: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  name: EditChairPositionByDeskPosition(int, int, ChairPosition)
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_EditChairPositionByDeskPosition_System_Int32_System_Int32_haveaseat_Models_ChairPosition_
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  name.vb: EditChairPositionByDeskPosition(Integer, Integer, ChairPosition)
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(int, int, haveaseat.Models.ChairPosition)
  fullName.vb: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(Integer, Integer, haveaseat.Models.ChairPosition)
  nameWithType: IMapRepository.EditChairPositionByDeskPosition(int, int, ChairPosition)
  nameWithType.vb: IMapRepository.EditChairPositionByDeskPosition(Integer, Integer, ChairPosition)
- uid: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition*
  name: EditChairPositionByDeskPosition
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_EditChairPositionByDeskPosition_
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition
  nameWithType: IMapRepository.EditChairPositionByDeskPosition
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
  name: GetAllDesks()
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllDesks
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks()
  nameWithType: IMapRepository.GetAllDesks()
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks*
  name: GetAllDesks
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllDesks_
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
  nameWithType: IMapRepository.GetAllDesks
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
  name: GetAllMap()
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllMap
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap()
  nameWithType: IMapRepository.GetAllMap()
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap*
  name: GetAllMap
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllMap_
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
  nameWithType: IMapRepository.GetAllMap
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
  name: GetAllRooms()
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllRooms
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms()
  nameWithType: IMapRepository.GetAllRooms()
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms*
  name: GetAllRooms
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllRooms_
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
  nameWithType: IMapRepository.GetAllRooms
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(System.Int32,System.Int32)
  name: GetCellByPosition(int, int)
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetCellByPosition_System_Int32_System_Int32_
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(System.Int32,System.Int32)
  name.vb: GetCellByPosition(Integer, Integer)
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(int, int)
  fullName.vb: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(Integer, Integer)
  nameWithType: IMapRepository.GetCellByPosition(int, int)
  nameWithType.vb: IMapRepository.GetCellByPosition(Integer, Integer)
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition*
  name: GetCellByPosition
  href: api/haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetCellByPosition_
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition
  nameWithType: IMapRepository.GetCellByPosition
- uid: haveaseat.Repositories.Interfaces.IReservationRepository
  name: IReservationRepository
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html
  commentId: T:haveaseat.Repositories.Interfaces.IReservationRepository
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository
  nameWithType: IReservationRepository
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.DeleteReservationById(System.Int64)
  name: DeleteReservationById(long)
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_DeleteReservationById_System_Int64_
  commentId: M:haveaseat.Repositories.Interfaces.IReservationRepository.DeleteReservationById(System.Int64)
  name.vb: DeleteReservationById(Long)
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.DeleteReservationById(long)
  fullName.vb: haveaseat.Repositories.Interfaces.IReservationRepository.DeleteReservationById(Long)
  nameWithType: IReservationRepository.DeleteReservationById(long)
  nameWithType.vb: IReservationRepository.DeleteReservationById(Long)
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.DeleteReservationById*
  name: DeleteReservationById
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_DeleteReservationById_
  commentId: Overload:haveaseat.Repositories.Interfaces.IReservationRepository.DeleteReservationById
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.DeleteReservationById
  nameWithType: IReservationRepository.DeleteReservationById
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.GetAllUsersFromReservationsByDate(System.DateOnly)
  name: GetAllUsersFromReservationsByDate(DateOnly)
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_GetAllUsersFromReservationsByDate_System_DateOnly_
  commentId: M:haveaseat.Repositories.Interfaces.IReservationRepository.GetAllUsersFromReservationsByDate(System.DateOnly)
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.GetAllUsersFromReservationsByDate(System.DateOnly)
  nameWithType: IReservationRepository.GetAllUsersFromReservationsByDate(DateOnly)
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.GetAllUsersFromReservationsByDate*
  name: GetAllUsersFromReservationsByDate
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_GetAllUsersFromReservationsByDate_
  commentId: Overload:haveaseat.Repositories.Interfaces.IReservationRepository.GetAllUsersFromReservationsByDate
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.GetAllUsersFromReservationsByDate
  nameWithType: IReservationRepository.GetAllUsersFromReservationsByDate
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByDay(System.DateOnly)
  name: GetReservationsByDay(DateOnly)
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_GetReservationsByDay_System_DateOnly_
  commentId: M:haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByDay(System.DateOnly)
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByDay(System.DateOnly)
  nameWithType: IReservationRepository.GetReservationsByDay(DateOnly)
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByDay*
  name: GetReservationsByDay
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_GetReservationsByDay_
  commentId: Overload:haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByDay
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByDay
  nameWithType: IReservationRepository.GetReservationsByDay
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByUserEmail(System.String)
  name: GetReservationsByUserEmail(string)
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_GetReservationsByUserEmail_System_String_
  commentId: M:haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByUserEmail(System.String)
  name.vb: GetReservationsByUserEmail(String)
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByUserEmail(string)
  fullName.vb: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByUserEmail(String)
  nameWithType: IReservationRepository.GetReservationsByUserEmail(string)
  nameWithType.vb: IReservationRepository.GetReservationsByUserEmail(String)
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByUserEmail*
  name: GetReservationsByUserEmail
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_GetReservationsByUserEmail_
  commentId: Overload:haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByUserEmail
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.GetReservationsByUserEmail
  nameWithType: IReservationRepository.GetReservationsByUserEmail
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.InsertReservations(haveaseat.DTOs.NewReservationDTO)
  name: InsertReservations(NewReservationDTO)
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_InsertReservations_haveaseat_DTOs_NewReservationDTO_
  commentId: M:haveaseat.Repositories.Interfaces.IReservationRepository.InsertReservations(haveaseat.DTOs.NewReservationDTO)
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.InsertReservations(haveaseat.DTOs.NewReservationDTO)
  nameWithType: IReservationRepository.InsertReservations(NewReservationDTO)
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.InsertReservations*
  name: InsertReservations
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_InsertReservations_
  commentId: Overload:haveaseat.Repositories.Interfaces.IReservationRepository.InsertReservations
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.InsertReservations
  nameWithType: IReservationRepository.InsertReservations
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.longTimeReservationToCheckDTQByDeskId(System.Int64)
  name: longTimeReservationToCheckDTQByDeskId(long)
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_longTimeReservationToCheckDTQByDeskId_System_Int64_
  commentId: M:haveaseat.Repositories.Interfaces.IReservationRepository.longTimeReservationToCheckDTQByDeskId(System.Int64)
  name.vb: longTimeReservationToCheckDTQByDeskId(Long)
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.longTimeReservationToCheckDTQByDeskId(long)
  fullName.vb: haveaseat.Repositories.Interfaces.IReservationRepository.longTimeReservationToCheckDTQByDeskId(Long)
  nameWithType: IReservationRepository.longTimeReservationToCheckDTQByDeskId(long)
  nameWithType.vb: IReservationRepository.longTimeReservationToCheckDTQByDeskId(Long)
- uid: haveaseat.Repositories.Interfaces.IReservationRepository.longTimeReservationToCheckDTQByDeskId*
  name: longTimeReservationToCheckDTQByDeskId
  href: api/haveaseat.Repositories.Interfaces.IReservationRepository.html#haveaseat_Repositories_Interfaces_IReservationRepository_longTimeReservationToCheckDTQByDeskId_
  commentId: Overload:haveaseat.Repositories.Interfaces.IReservationRepository.longTimeReservationToCheckDTQByDeskId
  isSpec: "True"
  fullName: haveaseat.Repositories.Interfaces.IReservationRepository.longTimeReservationToCheckDTQByDeskId
  nameWithType: IReservationRepository.longTimeReservationToCheckDTQByDeskId
- uid: haveaseat.Repositories.MapRepository
  name: MapRepository
  href: api/haveaseat.Repositories.MapRepository.html
  commentId: T:haveaseat.Repositories.MapRepository
  fullName: haveaseat.Repositories.MapRepository
  nameWithType: MapRepository
- uid: haveaseat.Repositories.MapRepository.#ctor(haveaseat.DbContexts.DataContext)
  name: MapRepository(DataContext)
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository__ctor_haveaseat_DbContexts_DataContext_
  commentId: M:haveaseat.Repositories.MapRepository.#ctor(haveaseat.DbContexts.DataContext)
  name.vb: New(DataContext)
  fullName: haveaseat.Repositories.MapRepository.MapRepository(haveaseat.DbContexts.DataContext)
  fullName.vb: haveaseat.Repositories.MapRepository.New(haveaseat.DbContexts.DataContext)
  nameWithType: MapRepository.MapRepository(DataContext)
  nameWithType.vb: MapRepository.New(DataContext)
- uid: haveaseat.Repositories.MapRepository.#ctor*
  name: MapRepository
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository__ctor_
  commentId: Overload:haveaseat.Repositories.MapRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.Repositories.MapRepository.MapRepository
  fullName.vb: haveaseat.Repositories.MapRepository.New
  nameWithType: MapRepository.MapRepository
  nameWithType.vb: MapRepository.New
- uid: haveaseat.Repositories.MapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO,haveaseat.Entities.Cell)
  name: AddNewDesk(NewDeskDTO, Cell)
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_AddNewDesk_haveaseat_DTOs_NewDeskDTO_haveaseat_Entities_Cell_
  commentId: M:haveaseat.Repositories.MapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO,haveaseat.Entities.Cell)
  fullName: haveaseat.Repositories.MapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO, haveaseat.Entities.Cell)
  nameWithType: MapRepository.AddNewDesk(NewDeskDTO, Cell)
- uid: haveaseat.Repositories.MapRepository.AddNewDesk*
  name: AddNewDesk
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_AddNewDesk_
  commentId: Overload:haveaseat.Repositories.MapRepository.AddNewDesk
  isSpec: "True"
  fullName: haveaseat.Repositories.MapRepository.AddNewDesk
  nameWithType: MapRepository.AddNewDesk
- uid: haveaseat.Repositories.MapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  name: DeleteDesk(NewDeskDTO)
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_DeleteDesk_haveaseat_DTOs_NewDeskDTO_
  commentId: M:haveaseat.Repositories.MapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  fullName: haveaseat.Repositories.MapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  nameWithType: MapRepository.DeleteDesk(NewDeskDTO)
- uid: haveaseat.Repositories.MapRepository.DeleteDesk*
  name: DeleteDesk
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_DeleteDesk_
  commentId: Overload:haveaseat.Repositories.MapRepository.DeleteDesk
  isSpec: "True"
  fullName: haveaseat.Repositories.MapRepository.DeleteDesk
  nameWithType: MapRepository.DeleteDesk
- uid: haveaseat.Repositories.MapRepository.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  name: EditChairPositionByDeskPosition(int, int, ChairPosition)
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_EditChairPositionByDeskPosition_System_Int32_System_Int32_haveaseat_Models_ChairPosition_
  commentId: M:haveaseat.Repositories.MapRepository.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  name.vb: EditChairPositionByDeskPosition(Integer, Integer, ChairPosition)
  fullName: haveaseat.Repositories.MapRepository.EditChairPositionByDeskPosition(int, int, haveaseat.Models.ChairPosition)
  fullName.vb: haveaseat.Repositories.MapRepository.EditChairPositionByDeskPosition(Integer, Integer, haveaseat.Models.ChairPosition)
  nameWithType: MapRepository.EditChairPositionByDeskPosition(int, int, ChairPosition)
  nameWithType.vb: MapRepository.EditChairPositionByDeskPosition(Integer, Integer, ChairPosition)
- uid: haveaseat.Repositories.MapRepository.EditChairPositionByDeskPosition*
  name: EditChairPositionByDeskPosition
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_EditChairPositionByDeskPosition_
  commentId: Overload:haveaseat.Repositories.MapRepository.EditChairPositionByDeskPosition
  isSpec: "True"
  fullName: haveaseat.Repositories.MapRepository.EditChairPositionByDeskPosition
  nameWithType: MapRepository.EditChairPositionByDeskPosition
- uid: haveaseat.Repositories.MapRepository.GetAllDesks
  name: GetAllDesks()
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_GetAllDesks
  commentId: M:haveaseat.Repositories.MapRepository.GetAllDesks
  fullName: haveaseat.Repositories.MapRepository.GetAllDesks()
  nameWithType: MapRepository.GetAllDesks()
- uid: haveaseat.Repositories.MapRepository.GetAllDesks*
  name: GetAllDesks
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_GetAllDesks_
  commentId: Overload:haveaseat.Repositories.MapRepository.GetAllDesks
  isSpec: "True"
  fullName: haveaseat.Repositories.MapRepository.GetAllDesks
  nameWithType: MapRepository.GetAllDesks
- uid: haveaseat.Repositories.MapRepository.GetAllMap
  name: GetAllMap()
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_GetAllMap
  commentId: M:haveaseat.Repositories.MapRepository.GetAllMap
  fullName: haveaseat.Repositories.MapRepository.GetAllMap()
  nameWithType: MapRepository.GetAllMap()
- uid: haveaseat.Repositories.MapRepository.GetAllMap*
  name: GetAllMap
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_GetAllMap_
  commentId: Overload:haveaseat.Repositories.MapRepository.GetAllMap
  isSpec: "True"
  fullName: haveaseat.Repositories.MapRepository.GetAllMap
  nameWithType: MapRepository.GetAllMap
- uid: haveaseat.Repositories.MapRepository.GetAllRooms
  name: GetAllRooms()
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_GetAllRooms
  commentId: M:haveaseat.Repositories.MapRepository.GetAllRooms
  fullName: haveaseat.Repositories.MapRepository.GetAllRooms()
  nameWithType: MapRepository.GetAllRooms()
- uid: haveaseat.Repositories.MapRepository.GetAllRooms*
  name: GetAllRooms
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_GetAllRooms_
  commentId: Overload:haveaseat.Repositories.MapRepository.GetAllRooms
  isSpec: "True"
  fullName: haveaseat.Repositories.MapRepository.GetAllRooms
  nameWithType: MapRepository.GetAllRooms
- uid: haveaseat.Repositories.MapRepository.GetCellByPosition(System.Int32,System.Int32)
  name: GetCellByPosition(int, int)
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_GetCellByPosition_System_Int32_System_Int32_
  commentId: M:haveaseat.Repositories.MapRepository.GetCellByPosition(System.Int32,System.Int32)
  name.vb: GetCellByPosition(Integer, Integer)
  fullName: haveaseat.Repositories.MapRepository.GetCellByPosition(int, int)
  fullName.vb: haveaseat.Repositories.MapRepository.GetCellByPosition(Integer, Integer)
  nameWithType: MapRepository.GetCellByPosition(int, int)
  nameWithType.vb: MapRepository.GetCellByPosition(Integer, Integer)
- uid: haveaseat.Repositories.MapRepository.GetCellByPosition*
  name: GetCellByPosition
  href: api/haveaseat.Repositories.MapRepository.html#haveaseat_Repositories_MapRepository_GetCellByPosition_
  commentId: Overload:haveaseat.Repositories.MapRepository.GetCellByPosition
  isSpec: "True"
  fullName: haveaseat.Repositories.MapRepository.GetCellByPosition
  nameWithType: MapRepository.GetCellByPosition
- uid: haveaseat.Repositories.ReservationRepository
  name: ReservationRepository
  href: api/haveaseat.Repositories.ReservationRepository.html
  commentId: T:haveaseat.Repositories.ReservationRepository
  fullName: haveaseat.Repositories.ReservationRepository
  nameWithType: ReservationRepository
- uid: haveaseat.Repositories.ReservationRepository.#ctor(haveaseat.DbContexts.DataContext)
  name: ReservationRepository(DataContext)
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository__ctor_haveaseat_DbContexts_DataContext_
  commentId: M:haveaseat.Repositories.ReservationRepository.#ctor(haveaseat.DbContexts.DataContext)
  name.vb: New(DataContext)
  fullName: haveaseat.Repositories.ReservationRepository.ReservationRepository(haveaseat.DbContexts.DataContext)
  fullName.vb: haveaseat.Repositories.ReservationRepository.New(haveaseat.DbContexts.DataContext)
  nameWithType: ReservationRepository.ReservationRepository(DataContext)
  nameWithType.vb: ReservationRepository.New(DataContext)
- uid: haveaseat.Repositories.ReservationRepository.#ctor*
  name: ReservationRepository
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository__ctor_
  commentId: Overload:haveaseat.Repositories.ReservationRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat.Repositories.ReservationRepository.ReservationRepository
  fullName.vb: haveaseat.Repositories.ReservationRepository.New
  nameWithType: ReservationRepository.ReservationRepository
  nameWithType.vb: ReservationRepository.New
- uid: haveaseat.Repositories.ReservationRepository.DeleteReservationById(System.Int64)
  name: DeleteReservationById(long)
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_DeleteReservationById_System_Int64_
  commentId: M:haveaseat.Repositories.ReservationRepository.DeleteReservationById(System.Int64)
  name.vb: DeleteReservationById(Long)
  fullName: haveaseat.Repositories.ReservationRepository.DeleteReservationById(long)
  fullName.vb: haveaseat.Repositories.ReservationRepository.DeleteReservationById(Long)
  nameWithType: ReservationRepository.DeleteReservationById(long)
  nameWithType.vb: ReservationRepository.DeleteReservationById(Long)
- uid: haveaseat.Repositories.ReservationRepository.DeleteReservationById*
  name: DeleteReservationById
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_DeleteReservationById_
  commentId: Overload:haveaseat.Repositories.ReservationRepository.DeleteReservationById
  isSpec: "True"
  fullName: haveaseat.Repositories.ReservationRepository.DeleteReservationById
  nameWithType: ReservationRepository.DeleteReservationById
- uid: haveaseat.Repositories.ReservationRepository.GetAllUsersFromReservationsByDate(System.DateOnly)
  name: GetAllUsersFromReservationsByDate(DateOnly)
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_GetAllUsersFromReservationsByDate_System_DateOnly_
  commentId: M:haveaseat.Repositories.ReservationRepository.GetAllUsersFromReservationsByDate(System.DateOnly)
  fullName: haveaseat.Repositories.ReservationRepository.GetAllUsersFromReservationsByDate(System.DateOnly)
  nameWithType: ReservationRepository.GetAllUsersFromReservationsByDate(DateOnly)
- uid: haveaseat.Repositories.ReservationRepository.GetAllUsersFromReservationsByDate*
  name: GetAllUsersFromReservationsByDate
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_GetAllUsersFromReservationsByDate_
  commentId: Overload:haveaseat.Repositories.ReservationRepository.GetAllUsersFromReservationsByDate
  isSpec: "True"
  fullName: haveaseat.Repositories.ReservationRepository.GetAllUsersFromReservationsByDate
  nameWithType: ReservationRepository.GetAllUsersFromReservationsByDate
- uid: haveaseat.Repositories.ReservationRepository.GetReservationsByDay(System.DateOnly)
  name: GetReservationsByDay(DateOnly)
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_GetReservationsByDay_System_DateOnly_
  commentId: M:haveaseat.Repositories.ReservationRepository.GetReservationsByDay(System.DateOnly)
  fullName: haveaseat.Repositories.ReservationRepository.GetReservationsByDay(System.DateOnly)
  nameWithType: ReservationRepository.GetReservationsByDay(DateOnly)
- uid: haveaseat.Repositories.ReservationRepository.GetReservationsByDay*
  name: GetReservationsByDay
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_GetReservationsByDay_
  commentId: Overload:haveaseat.Repositories.ReservationRepository.GetReservationsByDay
  isSpec: "True"
  fullName: haveaseat.Repositories.ReservationRepository.GetReservationsByDay
  nameWithType: ReservationRepository.GetReservationsByDay
- uid: haveaseat.Repositories.ReservationRepository.GetReservationsByUserEmail(System.String)
  name: GetReservationsByUserEmail(string)
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_GetReservationsByUserEmail_System_String_
  commentId: M:haveaseat.Repositories.ReservationRepository.GetReservationsByUserEmail(System.String)
  name.vb: GetReservationsByUserEmail(String)
  fullName: haveaseat.Repositories.ReservationRepository.GetReservationsByUserEmail(string)
  fullName.vb: haveaseat.Repositories.ReservationRepository.GetReservationsByUserEmail(String)
  nameWithType: ReservationRepository.GetReservationsByUserEmail(string)
  nameWithType.vb: ReservationRepository.GetReservationsByUserEmail(String)
- uid: haveaseat.Repositories.ReservationRepository.GetReservationsByUserEmail*
  name: GetReservationsByUserEmail
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_GetReservationsByUserEmail_
  commentId: Overload:haveaseat.Repositories.ReservationRepository.GetReservationsByUserEmail
  isSpec: "True"
  fullName: haveaseat.Repositories.ReservationRepository.GetReservationsByUserEmail
  nameWithType: ReservationRepository.GetReservationsByUserEmail
- uid: haveaseat.Repositories.ReservationRepository.InsertReservations(haveaseat.DTOs.NewReservationDTO)
  name: InsertReservations(NewReservationDTO)
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_InsertReservations_haveaseat_DTOs_NewReservationDTO_
  commentId: M:haveaseat.Repositories.ReservationRepository.InsertReservations(haveaseat.DTOs.NewReservationDTO)
  fullName: haveaseat.Repositories.ReservationRepository.InsertReservations(haveaseat.DTOs.NewReservationDTO)
  nameWithType: ReservationRepository.InsertReservations(NewReservationDTO)
- uid: haveaseat.Repositories.ReservationRepository.InsertReservations*
  name: InsertReservations
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_InsertReservations_
  commentId: Overload:haveaseat.Repositories.ReservationRepository.InsertReservations
  isSpec: "True"
  fullName: haveaseat.Repositories.ReservationRepository.InsertReservations
  nameWithType: ReservationRepository.InsertReservations
- uid: haveaseat.Repositories.ReservationRepository.longTimeReservationToCheckDTQByDeskId(System.Int64)
  name: longTimeReservationToCheckDTQByDeskId(long)
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_longTimeReservationToCheckDTQByDeskId_System_Int64_
  commentId: M:haveaseat.Repositories.ReservationRepository.longTimeReservationToCheckDTQByDeskId(System.Int64)
  name.vb: longTimeReservationToCheckDTQByDeskId(Long)
  fullName: haveaseat.Repositories.ReservationRepository.longTimeReservationToCheckDTQByDeskId(long)
  fullName.vb: haveaseat.Repositories.ReservationRepository.longTimeReservationToCheckDTQByDeskId(Long)
  nameWithType: ReservationRepository.longTimeReservationToCheckDTQByDeskId(long)
  nameWithType.vb: ReservationRepository.longTimeReservationToCheckDTQByDeskId(Long)
- uid: haveaseat.Repositories.ReservationRepository.longTimeReservationToCheckDTQByDeskId*
  name: longTimeReservationToCheckDTQByDeskId
  href: api/haveaseat.Repositories.ReservationRepository.html#haveaseat_Repositories_ReservationRepository_longTimeReservationToCheckDTQByDeskId_
  commentId: Overload:haveaseat.Repositories.ReservationRepository.longTimeReservationToCheckDTQByDeskId
  isSpec: "True"
  fullName: haveaseat.Repositories.ReservationRepository.longTimeReservationToCheckDTQByDeskId
  nameWithType: ReservationRepository.longTimeReservationToCheckDTQByDeskId
- uid: haveaseat_api.Controllers
  name: haveaseat_api.Controllers
  href: api/haveaseat_api.Controllers.html
  commentId: N:haveaseat_api.Controllers
  fullName: haveaseat_api.Controllers
  nameWithType: haveaseat_api.Controllers
- uid: haveaseat_api.Controllers.AreaController
  name: AreaController
  href: api/haveaseat_api.Controllers.AreaController.html
  commentId: T:haveaseat_api.Controllers.AreaController
  fullName: haveaseat_api.Controllers.AreaController
  nameWithType: AreaController
- uid: haveaseat_api.Controllers.AreaController.#ctor(haveaseat.DbContexts.DataContext)
  name: AreaController(DataContext)
  href: api/haveaseat_api.Controllers.AreaController.html#haveaseat_api_Controllers_AreaController__ctor_haveaseat_DbContexts_DataContext_
  commentId: M:haveaseat_api.Controllers.AreaController.#ctor(haveaseat.DbContexts.DataContext)
  name.vb: New(DataContext)
  fullName: haveaseat_api.Controllers.AreaController.AreaController(haveaseat.DbContexts.DataContext)
  fullName.vb: haveaseat_api.Controllers.AreaController.New(haveaseat.DbContexts.DataContext)
  nameWithType: AreaController.AreaController(DataContext)
  nameWithType.vb: AreaController.New(DataContext)
- uid: haveaseat_api.Controllers.AreaController.#ctor*
  name: AreaController
  href: api/haveaseat_api.Controllers.AreaController.html#haveaseat_api_Controllers_AreaController__ctor_
  commentId: Overload:haveaseat_api.Controllers.AreaController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat_api.Controllers.AreaController.AreaController
  fullName.vb: haveaseat_api.Controllers.AreaController.New
  nameWithType: AreaController.AreaController
  nameWithType.vb: AreaController.New
- uid: haveaseat_api.Controllers.AreaController.GetArea
  name: GetArea()
  href: api/haveaseat_api.Controllers.AreaController.html#haveaseat_api_Controllers_AreaController_GetArea
  commentId: M:haveaseat_api.Controllers.AreaController.GetArea
  fullName: haveaseat_api.Controllers.AreaController.GetArea()
  nameWithType: AreaController.GetArea()
- uid: haveaseat_api.Controllers.AreaController.GetArea*
  name: GetArea
  href: api/haveaseat_api.Controllers.AreaController.html#haveaseat_api_Controllers_AreaController_GetArea_
  commentId: Overload:haveaseat_api.Controllers.AreaController.GetArea
  isSpec: "True"
  fullName: haveaseat_api.Controllers.AreaController.GetArea
  nameWithType: AreaController.GetArea
- uid: haveaseat_api.Controllers.AuthenticationController
  name: AuthenticationController
  href: api/haveaseat_api.Controllers.AuthenticationController.html
  commentId: T:haveaseat_api.Controllers.AuthenticationController
  fullName: haveaseat_api.Controllers.AuthenticationController
  nameWithType: AuthenticationController
- uid: haveaseat_api.Controllers.AuthenticationController.#ctor(haveaseat.Repositories.Interfaces.IAuthenticationRepository)
  name: AuthenticationController(IAuthenticationRepository)
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController__ctor_haveaseat_Repositories_Interfaces_IAuthenticationRepository_
  commentId: M:haveaseat_api.Controllers.AuthenticationController.#ctor(haveaseat.Repositories.Interfaces.IAuthenticationRepository)
  name.vb: New(IAuthenticationRepository)
  fullName: haveaseat_api.Controllers.AuthenticationController.AuthenticationController(haveaseat.Repositories.Interfaces.IAuthenticationRepository)
  fullName.vb: haveaseat_api.Controllers.AuthenticationController.New(haveaseat.Repositories.Interfaces.IAuthenticationRepository)
  nameWithType: AuthenticationController.AuthenticationController(IAuthenticationRepository)
  nameWithType.vb: AuthenticationController.New(IAuthenticationRepository)
- uid: haveaseat_api.Controllers.AuthenticationController.#ctor*
  name: AuthenticationController
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController__ctor_
  commentId: Overload:haveaseat_api.Controllers.AuthenticationController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat_api.Controllers.AuthenticationController.AuthenticationController
  fullName.vb: haveaseat_api.Controllers.AuthenticationController.New
  nameWithType: AuthenticationController.AuthenticationController
  nameWithType.vb: AuthenticationController.New
- uid: haveaseat_api.Controllers.AuthenticationController.GetUserByEmail(System.String)
  name: GetUserByEmail(string)
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController_GetUserByEmail_System_String_
  commentId: M:haveaseat_api.Controllers.AuthenticationController.GetUserByEmail(System.String)
  name.vb: GetUserByEmail(String)
  fullName: haveaseat_api.Controllers.AuthenticationController.GetUserByEmail(string)
  fullName.vb: haveaseat_api.Controllers.AuthenticationController.GetUserByEmail(String)
  nameWithType: AuthenticationController.GetUserByEmail(string)
  nameWithType.vb: AuthenticationController.GetUserByEmail(String)
- uid: haveaseat_api.Controllers.AuthenticationController.GetUserByEmail*
  name: GetUserByEmail
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController_GetUserByEmail_
  commentId: Overload:haveaseat_api.Controllers.AuthenticationController.GetUserByEmail
  isSpec: "True"
  fullName: haveaseat_api.Controllers.AuthenticationController.GetUserByEmail
  nameWithType: AuthenticationController.GetUserByEmail
- uid: haveaseat_api.Controllers.AuthenticationController.GetUserById(System.Int64)
  name: GetUserById(long)
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController_GetUserById_System_Int64_
  commentId: M:haveaseat_api.Controllers.AuthenticationController.GetUserById(System.Int64)
  name.vb: GetUserById(Long)
  fullName: haveaseat_api.Controllers.AuthenticationController.GetUserById(long)
  fullName.vb: haveaseat_api.Controllers.AuthenticationController.GetUserById(Long)
  nameWithType: AuthenticationController.GetUserById(long)
  nameWithType.vb: AuthenticationController.GetUserById(Long)
- uid: haveaseat_api.Controllers.AuthenticationController.GetUserById*
  name: GetUserById
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController_GetUserById_
  commentId: Overload:haveaseat_api.Controllers.AuthenticationController.GetUserById
  isSpec: "True"
  fullName: haveaseat_api.Controllers.AuthenticationController.GetUserById
  nameWithType: AuthenticationController.GetUserById
- uid: haveaseat_api.Controllers.AuthenticationController.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  name: LoginUser(NewUserLoginDTO)
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController_LoginUser_haveaseat_DTOs_NewUserLoginDTO_
  commentId: M:haveaseat_api.Controllers.AuthenticationController.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  fullName: haveaseat_api.Controllers.AuthenticationController.LoginUser(haveaseat.DTOs.NewUserLoginDTO)
  nameWithType: AuthenticationController.LoginUser(NewUserLoginDTO)
- uid: haveaseat_api.Controllers.AuthenticationController.LoginUser*
  name: LoginUser
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController_LoginUser_
  commentId: Overload:haveaseat_api.Controllers.AuthenticationController.LoginUser
  isSpec: "True"
  fullName: haveaseat_api.Controllers.AuthenticationController.LoginUser
  nameWithType: AuthenticationController.LoginUser
- uid: haveaseat_api.Controllers.AuthenticationController.RegisterUser(haveaseat.DTOs.NewUserDTO)
  name: RegisterUser(NewUserDTO)
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController_RegisterUser_haveaseat_DTOs_NewUserDTO_
  commentId: M:haveaseat_api.Controllers.AuthenticationController.RegisterUser(haveaseat.DTOs.NewUserDTO)
  fullName: haveaseat_api.Controllers.AuthenticationController.RegisterUser(haveaseat.DTOs.NewUserDTO)
  nameWithType: AuthenticationController.RegisterUser(NewUserDTO)
- uid: haveaseat_api.Controllers.AuthenticationController.RegisterUser*
  name: RegisterUser
  href: api/haveaseat_api.Controllers.AuthenticationController.html#haveaseat_api_Controllers_AuthenticationController_RegisterUser_
  commentId: Overload:haveaseat_api.Controllers.AuthenticationController.RegisterUser
  isSpec: "True"
  fullName: haveaseat_api.Controllers.AuthenticationController.RegisterUser
  nameWithType: AuthenticationController.RegisterUser
- uid: haveaseat_api.Controllers.MapController
  name: MapController
  href: api/haveaseat_api.Controllers.MapController.html
  commentId: T:haveaseat_api.Controllers.MapController
  fullName: haveaseat_api.Controllers.MapController
  nameWithType: MapController
- uid: haveaseat_api.Controllers.MapController.#ctor(haveaseat.Repositories.Interfaces.IMapRepository)
  name: MapController(IMapRepository)
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController__ctor_haveaseat_Repositories_Interfaces_IMapRepository_
  commentId: M:haveaseat_api.Controllers.MapController.#ctor(haveaseat.Repositories.Interfaces.IMapRepository)
  name.vb: New(IMapRepository)
  fullName: haveaseat_api.Controllers.MapController.MapController(haveaseat.Repositories.Interfaces.IMapRepository)
  fullName.vb: haveaseat_api.Controllers.MapController.New(haveaseat.Repositories.Interfaces.IMapRepository)
  nameWithType: MapController.MapController(IMapRepository)
  nameWithType.vb: MapController.New(IMapRepository)
- uid: haveaseat_api.Controllers.MapController.#ctor*
  name: MapController
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController__ctor_
  commentId: Overload:haveaseat_api.Controllers.MapController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat_api.Controllers.MapController.MapController
  fullName.vb: haveaseat_api.Controllers.MapController.New
  nameWithType: MapController.MapController
  nameWithType.vb: MapController.New
- uid: haveaseat_api.Controllers.MapController.AddNewDesk(haveaseat.DTOs.NewDeskDTO)
  name: AddNewDesk(NewDeskDTO)
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_AddNewDesk_haveaseat_DTOs_NewDeskDTO_
  commentId: M:haveaseat_api.Controllers.MapController.AddNewDesk(haveaseat.DTOs.NewDeskDTO)
  fullName: haveaseat_api.Controllers.MapController.AddNewDesk(haveaseat.DTOs.NewDeskDTO)
  nameWithType: MapController.AddNewDesk(NewDeskDTO)
- uid: haveaseat_api.Controllers.MapController.AddNewDesk*
  name: AddNewDesk
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_AddNewDesk_
  commentId: Overload:haveaseat_api.Controllers.MapController.AddNewDesk
  isSpec: "True"
  fullName: haveaseat_api.Controllers.MapController.AddNewDesk
  nameWithType: MapController.AddNewDesk
- uid: haveaseat_api.Controllers.MapController.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  name: DeleteDesk(NewDeskDTO)
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_DeleteDesk_haveaseat_DTOs_NewDeskDTO_
  commentId: M:haveaseat_api.Controllers.MapController.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  fullName: haveaseat_api.Controllers.MapController.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  nameWithType: MapController.DeleteDesk(NewDeskDTO)
- uid: haveaseat_api.Controllers.MapController.DeleteDesk*
  name: DeleteDesk
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_DeleteDesk_
  commentId: Overload:haveaseat_api.Controllers.MapController.DeleteDesk
  isSpec: "True"
  fullName: haveaseat_api.Controllers.MapController.DeleteDesk
  nameWithType: MapController.DeleteDesk
- uid: haveaseat_api.Controllers.MapController.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  name: EditChairPositionByDeskPosition(int, int, ChairPosition)
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_EditChairPositionByDeskPosition_System_Int32_System_Int32_haveaseat_Models_ChairPosition_
  commentId: M:haveaseat_api.Controllers.MapController.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  name.vb: EditChairPositionByDeskPosition(Integer, Integer, ChairPosition)
  fullName: haveaseat_api.Controllers.MapController.EditChairPositionByDeskPosition(int, int, haveaseat.Models.ChairPosition)
  fullName.vb: haveaseat_api.Controllers.MapController.EditChairPositionByDeskPosition(Integer, Integer, haveaseat.Models.ChairPosition)
  nameWithType: MapController.EditChairPositionByDeskPosition(int, int, ChairPosition)
  nameWithType.vb: MapController.EditChairPositionByDeskPosition(Integer, Integer, ChairPosition)
- uid: haveaseat_api.Controllers.MapController.EditChairPositionByDeskPosition*
  name: EditChairPositionByDeskPosition
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_EditChairPositionByDeskPosition_
  commentId: Overload:haveaseat_api.Controllers.MapController.EditChairPositionByDeskPosition
  isSpec: "True"
  fullName: haveaseat_api.Controllers.MapController.EditChairPositionByDeskPosition
  nameWithType: MapController.EditChairPositionByDeskPosition
- uid: haveaseat_api.Controllers.MapController.GetAllDesks
  name: GetAllDesks()
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_GetAllDesks
  commentId: M:haveaseat_api.Controllers.MapController.GetAllDesks
  fullName: haveaseat_api.Controllers.MapController.GetAllDesks()
  nameWithType: MapController.GetAllDesks()
- uid: haveaseat_api.Controllers.MapController.GetAllDesks*
  name: GetAllDesks
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_GetAllDesks_
  commentId: Overload:haveaseat_api.Controllers.MapController.GetAllDesks
  isSpec: "True"
  fullName: haveaseat_api.Controllers.MapController.GetAllDesks
  nameWithType: MapController.GetAllDesks
- uid: haveaseat_api.Controllers.MapController.GetAllMap
  name: GetAllMap()
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_GetAllMap
  commentId: M:haveaseat_api.Controllers.MapController.GetAllMap
  fullName: haveaseat_api.Controllers.MapController.GetAllMap()
  nameWithType: MapController.GetAllMap()
- uid: haveaseat_api.Controllers.MapController.GetAllMap*
  name: GetAllMap
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_GetAllMap_
  commentId: Overload:haveaseat_api.Controllers.MapController.GetAllMap
  isSpec: "True"
  fullName: haveaseat_api.Controllers.MapController.GetAllMap
  nameWithType: MapController.GetAllMap
- uid: haveaseat_api.Controllers.MapController.GetAllRooms
  name: GetAllRooms()
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_GetAllRooms
  commentId: M:haveaseat_api.Controllers.MapController.GetAllRooms
  fullName: haveaseat_api.Controllers.MapController.GetAllRooms()
  nameWithType: MapController.GetAllRooms()
- uid: haveaseat_api.Controllers.MapController.GetAllRooms*
  name: GetAllRooms
  href: api/haveaseat_api.Controllers.MapController.html#haveaseat_api_Controllers_MapController_GetAllRooms_
  commentId: Overload:haveaseat_api.Controllers.MapController.GetAllRooms
  isSpec: "True"
  fullName: haveaseat_api.Controllers.MapController.GetAllRooms
  nameWithType: MapController.GetAllRooms
- uid: haveaseat_api.Controllers.ReservationController
  name: ReservationController
  href: api/haveaseat_api.Controllers.ReservationController.html
  commentId: T:haveaseat_api.Controllers.ReservationController
  fullName: haveaseat_api.Controllers.ReservationController
  nameWithType: ReservationController
- uid: haveaseat_api.Controllers.ReservationController.#ctor(haveaseat.Repositories.Interfaces.IReservationRepository)
  name: ReservationController(IReservationRepository)
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController__ctor_haveaseat_Repositories_Interfaces_IReservationRepository_
  commentId: M:haveaseat_api.Controllers.ReservationController.#ctor(haveaseat.Repositories.Interfaces.IReservationRepository)
  name.vb: New(IReservationRepository)
  fullName: haveaseat_api.Controllers.ReservationController.ReservationController(haveaseat.Repositories.Interfaces.IReservationRepository)
  fullName.vb: haveaseat_api.Controllers.ReservationController.New(haveaseat.Repositories.Interfaces.IReservationRepository)
  nameWithType: ReservationController.ReservationController(IReservationRepository)
  nameWithType.vb: ReservationController.New(IReservationRepository)
- uid: haveaseat_api.Controllers.ReservationController.#ctor*
  name: ReservationController
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController__ctor_
  commentId: Overload:haveaseat_api.Controllers.ReservationController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: haveaseat_api.Controllers.ReservationController.ReservationController
  fullName.vb: haveaseat_api.Controllers.ReservationController.New
  nameWithType: ReservationController.ReservationController
  nameWithType.vb: ReservationController.New
- uid: haveaseat_api.Controllers.ReservationController.DeleteReservation(System.Int64)
  name: DeleteReservation(long)
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_DeleteReservation_System_Int64_
  commentId: M:haveaseat_api.Controllers.ReservationController.DeleteReservation(System.Int64)
  name.vb: DeleteReservation(Long)
  fullName: haveaseat_api.Controllers.ReservationController.DeleteReservation(long)
  fullName.vb: haveaseat_api.Controllers.ReservationController.DeleteReservation(Long)
  nameWithType: ReservationController.DeleteReservation(long)
  nameWithType.vb: ReservationController.DeleteReservation(Long)
- uid: haveaseat_api.Controllers.ReservationController.DeleteReservation*
  name: DeleteReservation
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_DeleteReservation_
  commentId: Overload:haveaseat_api.Controllers.ReservationController.DeleteReservation
  isSpec: "True"
  fullName: haveaseat_api.Controllers.ReservationController.DeleteReservation
  nameWithType: ReservationController.DeleteReservation
- uid: haveaseat_api.Controllers.ReservationController.GetAllReservationsByDeskId(System.Int64)
  name: GetAllReservationsByDeskId(long)
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_GetAllReservationsByDeskId_System_Int64_
  commentId: M:haveaseat_api.Controllers.ReservationController.GetAllReservationsByDeskId(System.Int64)
  name.vb: GetAllReservationsByDeskId(Long)
  fullName: haveaseat_api.Controllers.ReservationController.GetAllReservationsByDeskId(long)
  fullName.vb: haveaseat_api.Controllers.ReservationController.GetAllReservationsByDeskId(Long)
  nameWithType: ReservationController.GetAllReservationsByDeskId(long)
  nameWithType.vb: ReservationController.GetAllReservationsByDeskId(Long)
- uid: haveaseat_api.Controllers.ReservationController.GetAllReservationsByDeskId*
  name: GetAllReservationsByDeskId
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_GetAllReservationsByDeskId_
  commentId: Overload:haveaseat_api.Controllers.ReservationController.GetAllReservationsByDeskId
  isSpec: "True"
  fullName: haveaseat_api.Controllers.ReservationController.GetAllReservationsByDeskId
  nameWithType: ReservationController.GetAllReservationsByDeskId
- uid: haveaseat_api.Controllers.ReservationController.GetAllUsersFromReservationsByDate(System.DateOnly)
  name: GetAllUsersFromReservationsByDate(DateOnly)
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_GetAllUsersFromReservationsByDate_System_DateOnly_
  commentId: M:haveaseat_api.Controllers.ReservationController.GetAllUsersFromReservationsByDate(System.DateOnly)
  fullName: haveaseat_api.Controllers.ReservationController.GetAllUsersFromReservationsByDate(System.DateOnly)
  nameWithType: ReservationController.GetAllUsersFromReservationsByDate(DateOnly)
- uid: haveaseat_api.Controllers.ReservationController.GetAllUsersFromReservationsByDate*
  name: GetAllUsersFromReservationsByDate
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_GetAllUsersFromReservationsByDate_
  commentId: Overload:haveaseat_api.Controllers.ReservationController.GetAllUsersFromReservationsByDate
  isSpec: "True"
  fullName: haveaseat_api.Controllers.ReservationController.GetAllUsersFromReservationsByDate
  nameWithType: ReservationController.GetAllUsersFromReservationsByDate
- uid: haveaseat_api.Controllers.ReservationController.InsertReservation(haveaseat.DTOs.NewReservationDTO)
  name: InsertReservation(NewReservationDTO)
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_InsertReservation_haveaseat_DTOs_NewReservationDTO_
  commentId: M:haveaseat_api.Controllers.ReservationController.InsertReservation(haveaseat.DTOs.NewReservationDTO)
  fullName: haveaseat_api.Controllers.ReservationController.InsertReservation(haveaseat.DTOs.NewReservationDTO)
  nameWithType: ReservationController.InsertReservation(NewReservationDTO)
- uid: haveaseat_api.Controllers.ReservationController.InsertReservation*
  name: InsertReservation
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_InsertReservation_
  commentId: Overload:haveaseat_api.Controllers.ReservationController.InsertReservation
  isSpec: "True"
  fullName: haveaseat_api.Controllers.ReservationController.InsertReservation
  nameWithType: ReservationController.InsertReservation
- uid: haveaseat_api.Controllers.ReservationController.ReservationsByDate(System.DateOnly)
  name: ReservationsByDate(DateOnly)
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_ReservationsByDate_System_DateOnly_
  commentId: M:haveaseat_api.Controllers.ReservationController.ReservationsByDate(System.DateOnly)
  fullName: haveaseat_api.Controllers.ReservationController.ReservationsByDate(System.DateOnly)
  nameWithType: ReservationController.ReservationsByDate(DateOnly)
- uid: haveaseat_api.Controllers.ReservationController.ReservationsByDate*
  name: ReservationsByDate
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_ReservationsByDate_
  commentId: Overload:haveaseat_api.Controllers.ReservationController.ReservationsByDate
  isSpec: "True"
  fullName: haveaseat_api.Controllers.ReservationController.ReservationsByDate
  nameWithType: ReservationController.ReservationsByDate
- uid: haveaseat_api.Controllers.ReservationController.ReservationsByEmail(System.String)
  name: ReservationsByEmail(string)
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_ReservationsByEmail_System_String_
  commentId: M:haveaseat_api.Controllers.ReservationController.ReservationsByEmail(System.String)
  name.vb: ReservationsByEmail(String)
  fullName: haveaseat_api.Controllers.ReservationController.ReservationsByEmail(string)
  fullName.vb: haveaseat_api.Controllers.ReservationController.ReservationsByEmail(String)
  nameWithType: ReservationController.ReservationsByEmail(string)
  nameWithType.vb: ReservationController.ReservationsByEmail(String)
- uid: haveaseat_api.Controllers.ReservationController.ReservationsByEmail*
  name: ReservationsByEmail
  href: api/haveaseat_api.Controllers.ReservationController.html#haveaseat_api_Controllers_ReservationController_ReservationsByEmail_
  commentId: Overload:haveaseat_api.Controllers.ReservationController.ReservationsByEmail
  isSpec: "True"
  fullName: haveaseat_api.Controllers.ReservationController.ReservationsByEmail
  nameWithType: ReservationController.ReservationsByEmail
- uid: haveaseat_api.Seeders
  name: haveaseat_api.Seeders
  href: api/haveaseat_api.Seeders.html
  commentId: N:haveaseat_api.Seeders
  fullName: haveaseat_api.Seeders
  nameWithType: haveaseat_api.Seeders
- uid: haveaseat_api.Seeders.DeskSeeder
  name: DeskSeeder
  href: api/haveaseat_api.Seeders.DeskSeeder.html
  commentId: T:haveaseat_api.Seeders.DeskSeeder
  fullName: haveaseat_api.Seeders.DeskSeeder
  nameWithType: DeskSeeder
- uid: haveaseat_api.Seeders.DeskSeeder.SeedDesks(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedDesks(WebApplication)
  href: api/haveaseat_api.Seeders.DeskSeeder.html#haveaseat_api_Seeders_DeskSeeder_SeedDesks_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:haveaseat_api.Seeders.DeskSeeder.SeedDesks(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: haveaseat_api.Seeders.DeskSeeder.SeedDesks(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: DeskSeeder.SeedDesks(WebApplication)
- uid: haveaseat_api.Seeders.DeskSeeder.SeedDesks*
  name: SeedDesks
  href: api/haveaseat_api.Seeders.DeskSeeder.html#haveaseat_api_Seeders_DeskSeeder_SeedDesks_
  commentId: Overload:haveaseat_api.Seeders.DeskSeeder.SeedDesks
  isSpec: "True"
  fullName: haveaseat_api.Seeders.DeskSeeder.SeedDesks
  nameWithType: DeskSeeder.SeedDesks
- uid: haveaseat_api.Seeders.MapSeeder
  name: MapSeeder
  href: api/haveaseat_api.Seeders.MapSeeder.html
  commentId: T:haveaseat_api.Seeders.MapSeeder
  fullName: haveaseat_api.Seeders.MapSeeder
  nameWithType: MapSeeder
- uid: haveaseat_api.Seeders.MapSeeder.SeedMap(Microsoft.AspNetCore.Builder.WebApplication)
  name: SeedMap(WebApplication)
  href: api/haveaseat_api.Seeders.MapSeeder.html#haveaseat_api_Seeders_MapSeeder_SeedMap_Microsoft_AspNetCore_Builder_WebApplication_
  commentId: M:haveaseat_api.Seeders.MapSeeder.SeedMap(Microsoft.AspNetCore.Builder.WebApplication)
  fullName: haveaseat_api.Seeders.MapSeeder.SeedMap(Microsoft.AspNetCore.Builder.WebApplication)
  nameWithType: MapSeeder.SeedMap(WebApplication)
- uid: haveaseat_api.Seeders.MapSeeder.SeedMap*
  name: SeedMap
  href: api/haveaseat_api.Seeders.MapSeeder.html#haveaseat_api_Seeders_MapSeeder_SeedMap_
  commentId: Overload:haveaseat_api.Seeders.MapSeeder.SeedMap
  isSpec: "True"
  fullName: haveaseat_api.Seeders.MapSeeder.SeedMap
  nameWithType: MapSeeder.SeedMap
- uid: haveaseatapi.Migrations
  name: haveaseatapi.Migrations
  href: api/haveaseatapi.Migrations.html
  commentId: N:haveaseatapi.Migrations
  fullName: haveaseatapi.Migrations
  nameWithType: haveaseatapi.Migrations
- uid: haveaseatapi.Migrations.NamesAndSurnames
  name: NamesAndSurnames
  href: api/haveaseatapi.Migrations.NamesAndSurnames.html
  commentId: T:haveaseatapi.Migrations.NamesAndSurnames
  fullName: haveaseatapi.Migrations.NamesAndSurnames
  nameWithType: NamesAndSurnames
- uid: haveaseatapi.Migrations.NamesAndSurnames.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/haveaseatapi.Migrations.NamesAndSurnames.html#haveaseatapi_Migrations_NamesAndSurnames_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:haveaseatapi.Migrations.NamesAndSurnames.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: haveaseatapi.Migrations.NamesAndSurnames.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: NamesAndSurnames.BuildTargetModel(ModelBuilder)
- uid: haveaseatapi.Migrations.NamesAndSurnames.BuildTargetModel*
  name: BuildTargetModel
  href: api/haveaseatapi.Migrations.NamesAndSurnames.html#haveaseatapi_Migrations_NamesAndSurnames_BuildTargetModel_
  commentId: Overload:haveaseatapi.Migrations.NamesAndSurnames.BuildTargetModel
  isSpec: "True"
  fullName: haveaseatapi.Migrations.NamesAndSurnames.BuildTargetModel
  nameWithType: NamesAndSurnames.BuildTargetModel
- uid: haveaseatapi.Migrations.NamesAndSurnames.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/haveaseatapi.Migrations.NamesAndSurnames.html#haveaseatapi_Migrations_NamesAndSurnames_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:haveaseatapi.Migrations.NamesAndSurnames.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: haveaseatapi.Migrations.NamesAndSurnames.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: NamesAndSurnames.Down(MigrationBuilder)
- uid: haveaseatapi.Migrations.NamesAndSurnames.Down*
  name: Down
  href: api/haveaseatapi.Migrations.NamesAndSurnames.html#haveaseatapi_Migrations_NamesAndSurnames_Down_
  commentId: Overload:haveaseatapi.Migrations.NamesAndSurnames.Down
  isSpec: "True"
  fullName: haveaseatapi.Migrations.NamesAndSurnames.Down
  nameWithType: NamesAndSurnames.Down
- uid: haveaseatapi.Migrations.NamesAndSurnames.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/haveaseatapi.Migrations.NamesAndSurnames.html#haveaseatapi_Migrations_NamesAndSurnames_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:haveaseatapi.Migrations.NamesAndSurnames.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: haveaseatapi.Migrations.NamesAndSurnames.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: NamesAndSurnames.Up(MigrationBuilder)
- uid: haveaseatapi.Migrations.NamesAndSurnames.Up*
  name: Up
  href: api/haveaseatapi.Migrations.NamesAndSurnames.html#haveaseatapi_Migrations_NamesAndSurnames_Up_
  commentId: Overload:haveaseatapi.Migrations.NamesAndSurnames.Up
  isSpec: "True"
  fullName: haveaseatapi.Migrations.NamesAndSurnames.Up
  nameWithType: NamesAndSurnames.Up
