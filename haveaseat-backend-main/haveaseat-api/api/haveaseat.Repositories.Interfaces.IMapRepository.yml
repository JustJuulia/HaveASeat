### YamlMime:ManagedReference
items:
- uid: haveaseat.Repositories.Interfaces.IMapRepository
  commentId: T:haveaseat.Repositories.Interfaces.IMapRepository
  id: IMapRepository
  parent: haveaseat.Repositories.Interfaces
  children:
  - haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO,haveaseat.Entities.Cell)
  - haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  - haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  - haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
  - haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
  - haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
  - haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IMapRepository
  nameWithType: IMapRepository
  fullName: haveaseat.Repositories.Interfaces.IMapRepository
  type: Interface
  source:
    id: IMapRepository
    path: C:\Users\Praktyka\Downloads\haveaseat-backend-main\haveaseat-backend-main\haveaseat-api\haveaseat-api\Repositories\Interfaces\IMapRepository.cs
    startLine: 4
  assemblies:
  - haveaseat-api
  namespace: haveaseat.Repositories.Interfaces
  syntax:
    content: public interface IMapRepository
    content.vb: Public Interface IMapRepository
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
  id: GetAllRooms
  parent: haveaseat.Repositories.Interfaces.IMapRepository
  langs:
  - csharp
  - vb
  name: GetAllRooms()
  nameWithType: IMapRepository.GetAllRooms()
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms()
  type: Method
  source:
    id: GetAllRooms
    path: C:\Users\Praktyka\Downloads\haveaseat-backend-main\haveaseat-backend-main\haveaseat-api\haveaseat-api\Repositories\Interfaces\IMapRepository.cs
    startLine: 6
  assemblies:
  - haveaseat-api
  namespace: haveaseat.Repositories.Interfaces
  syntax:
    content: Task<List<RoomDTOCells>> GetAllRooms()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTOCells}}
    content.vb: Function GetAllRooms() As Task(Of List(Of RoomDTOCells))
  overload: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms*
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
  id: GetAllMap
  parent: haveaseat.Repositories.Interfaces.IMapRepository
  langs:
  - csharp
  - vb
  name: GetAllMap()
  nameWithType: IMapRepository.GetAllMap()
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap()
  type: Method
  source:
    id: GetAllMap
    path: C:\Users\Praktyka\Downloads\haveaseat-backend-main\haveaseat-backend-main\haveaseat-api\haveaseat-api\Repositories\Interfaces\IMapRepository.cs
    startLine: 7
  assemblies:
  - haveaseat-api
  namespace: haveaseat.Repositories.Interfaces
  syntax:
    content: Task<List<RoomDTO>> GetAllMap()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTO}}
    content.vb: Function GetAllMap() As Task(Of List(Of RoomDTO))
  overload: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap*
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
  id: GetAllDesks
  parent: haveaseat.Repositories.Interfaces.IMapRepository
  langs:
  - csharp
  - vb
  name: GetAllDesks()
  nameWithType: IMapRepository.GetAllDesks()
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks()
  type: Method
  source:
    id: GetAllDesks
    path: C:\Users\Praktyka\Downloads\haveaseat-backend-main\haveaseat-backend-main\haveaseat-api\haveaseat-api\Repositories\Interfaces\IMapRepository.cs
    startLine: 8
  assemblies:
  - haveaseat-api
  namespace: haveaseat.Repositories.Interfaces
  syntax:
    content: Task<List<RoomDTODesks>> GetAllDesks()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTODesks}}
    content.vb: Function GetAllDesks() As Task(Of List(Of RoomDTODesks))
  overload: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks*
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(System.Int32,System.Int32)
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(System.Int32,System.Int32)
  id: GetCellByPosition(System.Int32,System.Int32)
  parent: haveaseat.Repositories.Interfaces.IMapRepository
  langs:
  - csharp
  - vb
  name: GetCellByPosition(int, int)
  nameWithType: IMapRepository.GetCellByPosition(int, int)
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(int, int)
  type: Method
  source:
    id: GetCellByPosition
    path: C:\Users\Praktyka\Downloads\haveaseat-backend-main\haveaseat-backend-main\haveaseat-api\haveaseat-api\Repositories\Interfaces\IMapRepository.cs
    startLine: 9
  assemblies:
  - haveaseat-api
  namespace: haveaseat.Repositories.Interfaces
  syntax:
    content: Task<Cell> GetCellByPosition(int positionX, int positionY)
    parameters:
    - id: positionX
      type: System.Int32
    - id: positionY
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{haveaseat.Entities.Cell}
    content.vb: Function GetCellByPosition(positionX As Integer, positionY As Integer) As Task(Of Cell)
  overload: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition*
  nameWithType.vb: IMapRepository.GetCellByPosition(Integer, Integer)
  fullName.vb: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition(Integer, Integer)
  name.vb: GetCellByPosition(Integer, Integer)
- uid: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO,haveaseat.Entities.Cell)
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO,haveaseat.Entities.Cell)
  id: AddNewDesk(haveaseat.DTOs.NewDeskDTO,haveaseat.Entities.Cell)
  parent: haveaseat.Repositories.Interfaces.IMapRepository
  langs:
  - csharp
  - vb
  name: AddNewDesk(NewDeskDTO, Cell)
  nameWithType: IMapRepository.AddNewDesk(NewDeskDTO, Cell)
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk(haveaseat.DTOs.NewDeskDTO, haveaseat.Entities.Cell)
  type: Method
  source:
    id: AddNewDesk
    path: C:\Users\Praktyka\Downloads\haveaseat-backend-main\haveaseat-backend-main\haveaseat-api\haveaseat-api\Repositories\Interfaces\IMapRepository.cs
    startLine: 10
  assemblies:
  - haveaseat-api
  namespace: haveaseat.Repositories.Interfaces
  syntax:
    content: Task<bool> AddNewDesk(NewDeskDTO newDesk, Cell cell)
    parameters:
    - id: newDesk
      type: haveaseat.DTOs.NewDeskDTO
    - id: cell
      type: haveaseat.Entities.Cell
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function AddNewDesk(newDesk As NewDeskDTO, cell As Cell) As Task(Of Boolean)
  overload: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk*
- uid: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  id: EditChairPositionByDeskPosition(System.Int32,System.Int32,haveaseat.Models.ChairPosition)
  parent: haveaseat.Repositories.Interfaces.IMapRepository
  langs:
  - csharp
  - vb
  name: EditChairPositionByDeskPosition(int, int, ChairPosition)
  nameWithType: IMapRepository.EditChairPositionByDeskPosition(int, int, ChairPosition)
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(int, int, haveaseat.Models.ChairPosition)
  type: Method
  source:
    id: EditChairPositionByDeskPosition
    path: C:\Users\Praktyka\Downloads\haveaseat-backend-main\haveaseat-backend-main\haveaseat-api\haveaseat-api\Repositories\Interfaces\IMapRepository.cs
    startLine: 12
  assemblies:
  - haveaseat-api
  namespace: haveaseat.Repositories.Interfaces
  syntax:
    content: Task<bool> EditChairPositionByDeskPosition(int positonX, int positonY, ChairPosition chairPosition)
    parameters:
    - id: positonX
      type: System.Int32
    - id: positonY
      type: System.Int32
    - id: chairPosition
      type: haveaseat.Models.ChairPosition
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function EditChairPositionByDeskPosition(positonX As Integer, positonY As Integer, chairPosition As ChairPosition) As Task(Of Boolean)
  overload: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition*
  nameWithType.vb: IMapRepository.EditChairPositionByDeskPosition(Integer, Integer, ChairPosition)
  fullName.vb: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition(Integer, Integer, haveaseat.Models.ChairPosition)
  name.vb: EditChairPositionByDeskPosition(Integer, Integer, ChairPosition)
- uid: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  commentId: M:haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  id: DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  parent: haveaseat.Repositories.Interfaces.IMapRepository
  langs:
  - csharp
  - vb
  name: DeleteDesk(NewDeskDTO)
  nameWithType: IMapRepository.DeleteDesk(NewDeskDTO)
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk(haveaseat.DTOs.NewDeskDTO)
  type: Method
  source:
    id: DeleteDesk
    path: C:\Users\Praktyka\Downloads\haveaseat-backend-main\haveaseat-backend-main\haveaseat-api\haveaseat-api\Repositories\Interfaces\IMapRepository.cs
    startLine: 14
  assemblies:
  - haveaseat-api
  namespace: haveaseat.Repositories.Interfaces
  syntax:
    content: Task<bool> DeleteDesk(NewDeskDTO deskDTO)
    parameters:
    - id: deskDTO
      type: haveaseat.DTOs.NewDeskDTO
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function DeleteDesk(deskDTO As NewDeskDTO) As Task(Of Boolean)
  overload: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk*
references:
- uid: haveaseat.Repositories.Interfaces
  commentId: N:haveaseat.Repositories.Interfaces
  href: haveaseat.html
  name: haveaseat.Repositories.Interfaces
  nameWithType: haveaseat.Repositories.Interfaces
  fullName: haveaseat.Repositories.Interfaces
  spec.csharp:
  - uid: haveaseat
    name: haveaseat
    href: haveaseat.html
  - name: .
  - uid: haveaseat.Repositories
    name: Repositories
    href: haveaseat.Repositories.html
  - name: .
  - uid: haveaseat.Repositories.Interfaces
    name: Interfaces
    href: haveaseat.Repositories.Interfaces.html
  spec.vb:
  - uid: haveaseat
    name: haveaseat
    href: haveaseat.html
  - name: .
  - uid: haveaseat.Repositories
    name: Repositories
    href: haveaseat.Repositories.html
  - name: .
  - uid: haveaseat.Repositories.Interfaces
    name: Interfaces
    href: haveaseat.Repositories.Interfaces.html
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms*
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
  href: haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllRooms
  name: GetAllRooms
  nameWithType: IMapRepository.GetAllRooms
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllRooms
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTOCells}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTOCells}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<RoomDTOCells>>
  nameWithType: Task<List<RoomDTOCells>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<haveaseat.DTOs.RoomDTOCells>>
  nameWithType.vb: Task(Of List(Of RoomDTOCells))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of haveaseat.DTOs.RoomDTOCells))
  name.vb: Task(Of List(Of RoomDTOCells))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: haveaseat.DTOs.RoomDTOCells
    name: RoomDTOCells
    href: haveaseat.DTOs.RoomDTOCells.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: haveaseat.DTOs.RoomDTOCells
    name: RoomDTOCells
    href: haveaseat.DTOs.RoomDTOCells.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap*
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
  href: haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllMap
  name: GetAllMap
  nameWithType: IMapRepository.GetAllMap
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllMap
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTO}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTO}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<RoomDTO>>
  nameWithType: Task<List<RoomDTO>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<haveaseat.DTOs.RoomDTO>>
  nameWithType.vb: Task(Of List(Of RoomDTO))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of haveaseat.DTOs.RoomDTO))
  name.vb: Task(Of List(Of RoomDTO))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: haveaseat.DTOs.RoomDTO
    name: RoomDTO
    href: haveaseat.DTOs.RoomDTO.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: haveaseat.DTOs.RoomDTO
    name: RoomDTO
    href: haveaseat.DTOs.RoomDTO.html
  - name: )
  - name: )
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks*
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
  href: haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetAllDesks
  name: GetAllDesks
  nameWithType: IMapRepository.GetAllDesks
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetAllDesks
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTODesks}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{haveaseat.DTOs.RoomDTODesks}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<RoomDTODesks>>
  nameWithType: Task<List<RoomDTODesks>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<haveaseat.DTOs.RoomDTODesks>>
  nameWithType.vb: Task(Of List(Of RoomDTODesks))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of haveaseat.DTOs.RoomDTODesks))
  name.vb: Task(Of List(Of RoomDTODesks))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: haveaseat.DTOs.RoomDTODesks
    name: RoomDTODesks
    href: haveaseat.DTOs.RoomDTODesks.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: haveaseat.DTOs.RoomDTODesks
    name: RoomDTODesks
    href: haveaseat.DTOs.RoomDTODesks.html
  - name: )
  - name: )
- uid: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition*
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition
  href: haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_GetCellByPosition_System_Int32_System_Int32_
  name: GetCellByPosition
  nameWithType: IMapRepository.GetCellByPosition
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.GetCellByPosition
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{haveaseat.Entities.Cell}
  commentId: T:System.Threading.Tasks.Task{haveaseat.Entities.Cell}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Cell>
  nameWithType: Task<Cell>
  fullName: System.Threading.Tasks.Task<haveaseat.Entities.Cell>
  nameWithType.vb: Task(Of Cell)
  fullName.vb: System.Threading.Tasks.Task(Of haveaseat.Entities.Cell)
  name.vb: Task(Of Cell)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: haveaseat.Entities.Cell
    name: Cell
    href: haveaseat.Entities.Cell.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: haveaseat.Entities.Cell
    name: Cell
    href: haveaseat.Entities.Cell.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk*
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk
  href: haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_AddNewDesk_haveaseat_DTOs_NewDeskDTO_haveaseat_Entities_Cell_
  name: AddNewDesk
  nameWithType: IMapRepository.AddNewDesk
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.AddNewDesk
- uid: haveaseat.DTOs.NewDeskDTO
  commentId: T:haveaseat.DTOs.NewDeskDTO
  parent: haveaseat.DTOs
  href: haveaseat.DTOs.NewDeskDTO.html
  name: NewDeskDTO
  nameWithType: NewDeskDTO
  fullName: haveaseat.DTOs.NewDeskDTO
- uid: haveaseat.Entities.Cell
  commentId: T:haveaseat.Entities.Cell
  parent: haveaseat.Entities
  href: haveaseat.Entities.Cell.html
  name: Cell
  nameWithType: Cell
  fullName: haveaseat.Entities.Cell
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: haveaseat.DTOs
  commentId: N:haveaseat.DTOs
  href: haveaseat.html
  name: haveaseat.DTOs
  nameWithType: haveaseat.DTOs
  fullName: haveaseat.DTOs
  spec.csharp:
  - uid: haveaseat
    name: haveaseat
    href: haveaseat.html
  - name: .
  - uid: haveaseat.DTOs
    name: DTOs
    href: haveaseat.DTOs.html
  spec.vb:
  - uid: haveaseat
    name: haveaseat
    href: haveaseat.html
  - name: .
  - uid: haveaseat.DTOs
    name: DTOs
    href: haveaseat.DTOs.html
- uid: haveaseat.Entities
  commentId: N:haveaseat.Entities
  href: haveaseat.html
  name: haveaseat.Entities
  nameWithType: haveaseat.Entities
  fullName: haveaseat.Entities
  spec.csharp:
  - uid: haveaseat
    name: haveaseat
    href: haveaseat.html
  - name: .
  - uid: haveaseat.Entities
    name: Entities
    href: haveaseat.Entities.html
  spec.vb:
  - uid: haveaseat
    name: haveaseat
    href: haveaseat.html
  - name: .
  - uid: haveaseat.Entities
    name: Entities
    href: haveaseat.Entities.html
- uid: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition*
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition
  href: haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_EditChairPositionByDeskPosition_System_Int32_System_Int32_haveaseat_Models_ChairPosition_
  name: EditChairPositionByDeskPosition
  nameWithType: IMapRepository.EditChairPositionByDeskPosition
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.EditChairPositionByDeskPosition
- uid: haveaseat.Models.ChairPosition
  commentId: T:haveaseat.Models.ChairPosition
  parent: haveaseat.Models
  href: haveaseat.Models.ChairPosition.html
  name: ChairPosition
  nameWithType: ChairPosition
  fullName: haveaseat.Models.ChairPosition
- uid: haveaseat.Models
  commentId: N:haveaseat.Models
  href: haveaseat.html
  name: haveaseat.Models
  nameWithType: haveaseat.Models
  fullName: haveaseat.Models
  spec.csharp:
  - uid: haveaseat
    name: haveaseat
    href: haveaseat.html
  - name: .
  - uid: haveaseat.Models
    name: Models
    href: haveaseat.Models.html
  spec.vb:
  - uid: haveaseat
    name: haveaseat
    href: haveaseat.html
  - name: .
  - uid: haveaseat.Models
    name: Models
    href: haveaseat.Models.html
- uid: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk*
  commentId: Overload:haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk
  href: haveaseat.Repositories.Interfaces.IMapRepository.html#haveaseat_Repositories_Interfaces_IMapRepository_DeleteDesk_haveaseat_DTOs_NewDeskDTO_
  name: DeleteDesk
  nameWithType: IMapRepository.DeleteDesk
  fullName: haveaseat.Repositories.Interfaces.IMapRepository.DeleteDesk
